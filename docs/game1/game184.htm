<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【1-84】仕組みが理解できる。それがテクニカルアーティスト - ゲームクリエイターが知るべき 97 のこと</title>
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="j84">【1-84】仕組みが理解できる。それがテクニカルアーティスト</h1>
<div class="author">
麓 一博
</div>
<p>　皆さんはゲームクリエイターというと、どんな職種が思い浮かびますか？ 「プロデューサー」「ディレクター」「アーティスト／デザイナー」「プログラマー」といった職種が真っ先に浮かび、どういう仕事をしているかも想像できると思います。</p>
<p>　ですが、実際のゲーム開発現場には、他にも多種多様の専門家が関わります。</p>
<p>　自分は「テクニカルアーティスト（以後：TA）」です。共通言語を持たない「アーティスト／デザイナー」「プログラマー」間のやりとりを円滑する為の環境開発、コーディネートなどを担う仕事です。</p>
<p>　本稿執筆にあたり、そんな自分にとって「クリエイターに必要な事」とは何か？ を改めて考えてみました。その結果、以下の三つの「心得」を意識して仕事をしていることに気付きました。</p>
<ul>
<li><p>心得その一：<br />
現場の要望は極力尊重する。</p></li>
<li>心得その二：<br />
要望そのものから一歩ひいて。要望の奥にある真意を探る。</li>
<li><p>心得その三：<br />
安易に思いついた解決策を直ぐに実行するのではなく、いくつか他の方法を考える。</p></li>
</ul>
<p>　どれも当然のことに思えるかも知れません。しかし、TA 業務を遂行する中で、これらの心得は外せません。何をするにも行動理念をおろそかにすると後で苦労します。</p>
<p>　しかし、「心得」は「遂行」しなければ意味がありません。「遂行」には「スキル」が必要です。これらの心得を遂行するため必要なスキルは何でしょうか？</p>
<p>　TA にとって重要な事は、今まで手を出さなかった範囲にも手を出し、必要とされている答えを用意する事です。そのためには、アーティストであっても「スクリプト/プログラム」を習得する事がひとつの課題となります。プログラムを覚えるということは、“仕組みを理解する”ということです。“仕組みを理解する”ことで、提案できる解決策が増えて、何が一番効率が良いかを選ぶことが出来ます。</p>
<p>　例えば、リアルタイムシェーダのコードを書けるようになること。アーティストが使う DCC ツールで表現手段としてサポートされている fx や cgfx といったエフェクト込みのシェーダ言語です。</p>
<p>　このスキルを身につけることで、実際にゲームで描きたい表現を自分の手元で、自分のデータで試して見ることができるようになります。プログラムとの組み合わせで考えることで、表現に必要な素材量や複雑さを最適化することができるようになります。アーティストがプログラムスキルを身につけるのは大変かもしれません。お勧めは、リアルタイムシェーダからはじめることです。</p>
<p>　コードを書き換えると、すぐに見た目が変わって、どんどんグラフィックが綺麗になっていきます。「絵を描く直感」に「プログラム」がつながっていく感覚が実感できます。</p>
<p>　絵を綺麗にするためのプログラムをある程度理解できたら、今度はデータ作成の効率化です。最近の DCC ツールでは、Python などのスクリプト言語サポートが充実しています。</p>
<p>　シェーダコードによって既に、プログラムの扱いに慣れていると思います。今度は、繰り返し行う作業をスクリプト言語で書けるようになれば、だいぶ仕事が楽になるはずです。</p>
<p>　そして、自分が覚えた表現、効率化の技術を周りの多くの人に使ってもらいましょう。この人たちに、楽に良い物を作りたいという欲求が出てきたらサポートとしてのテクニカルアーティストを目指してみましょう。</p>
<p>　サポートには時々「無茶ぶり」「丸投げ」といったような、驚くような案件が降ってくる事もあります。そんな難関にも、身につけたスキルを活用することで素早く効果的な対応をする事が出来ます。そうやって、ゲームクリエイター同士を繋ぎ、パイプを通し、ゲーム開発フローのインフラ整備をする。</p>
<p>　それが、ゲーム開発の TA という職種です。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/" class="external text" title="https://creativecommons.org/licenses/by/3.0/" rel="nofollow">CC-by-3.0</a> でライセンスされています。</p>
<nav>
<ul class="nav-links">
<li class="prev-article"><a href="game183.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">一覧</a></li>
<li class="next-article"><a href="game185.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
