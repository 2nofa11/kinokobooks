<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【27】UI の「正解」を求めて - ゲームクリエイターが知るべき 97 のこと</title>
  <meta property="og:title" content="【27】UI の「正解」を求めて | ゲームクリエイターが知るべき 97 のこと">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/game197_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/game1/game127.htm">
  <meta property="og:site_name" content="ゲームクリエイターが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <script type="text/javascript" src="../js/darkmode.js"></script>
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="j27">【27】UI の「正解」を求めて</h1>
<div class="author">
栗城 桂子
</div>
<p>　近年のゲームにおけるグラフィック、システムの複雑化、多様化と共に UI も設計、構築の難易度が上がってきています。そんな中、より良い UI を実現する為の方法としてよく語られるのが以下のようなものです。</p>
<ul>
<li>なるべく早くモックアップを作る</li>
<li>開発中にユーザーテストを行う</li>
</ul>
<p>　これは「正しい」方法です。なぜなら実際にユーザーに触ってもらった方がより早く「正解」に近づけるし、開発者がどんなに頭をひねって決めた仕様でも、それが覆される事も多々あるからです。</p>
<p>　ですが、この理想を実現するのが難しい現場も多いのではないのでしょうか。そもそも、ユーザーテストの文化が無いという問題を抱えているケースもあるかと思います。ソーシャルゲームやネットワークゲームでは、β版で一般にリリースし、調整期間を設けるのは一般的になってきていますが、コンソールゲーム開発はパッケージ発売での一発勝負になりがちです。開発段階で一般のテストユーザーを入れるという文化と環境が無い会社やチームの場合、それを 1 から構築しなければならず、1 セクションとしてではなくチーム全体で対応しなければいけない課題となります。</p>
<p>　そのような問題を抱える中で、UI デザイナーはどう動くべきでしょうか。せめて部内、社内テストを行える状況を早めに作れれば調整できるチャンスは増えます。なるべく早く実装にこぎつけるために一番重要なのは、セクションの垣根を作らず、やれる事にチャレンジすることです。</p>
<h2 id="仕様が遅延した場合" class="unnumbered">仕様が遅延した場合</h2>
<p>　遊びの根本的な仕様に関しては待たざるを得ないかもしれませんが、情報整理や、フローやレイアウトの仕様作成をデザイナーで引き受けるのは効果的です。完成の絵を頭の中で想像できる分、仕様調整が早く済み、全体のスピードアップに繋がります。</p>
<h2 id="実装担当プログラマが多忙な場合" class="unnumbered">実装担当プログラマが多忙な場合</h2>
<p>　例えデザイナが早期にデータを作成できたとしても、担当プログラマがタスクを多く抱えて多忙な場合、実装までがスムーズに行かない事は多々あるかと思います。その場合は、プログラマのタスクを減らす工夫をします。企画の検証用にダミー UI を実装する場合は、なるべくシンプルな構成にし、プログラマの負担を減らします。</p>
<p>　発注前に画面遷移や操作フローを紙の上で練る事も有用です。初めに、どんなに頭で練ったとしてもユーザーにとっての正解とは限らないとは言いましたが、それでも準備段階で企画とシミュレーションを行うことで、早期に様々な問題点を発見する事はできます。</p>
<p>　データを実装する機能は、その一部だけでも良いので、デザイナーが作業できるように作ってもらいます。例えば階層構造やデータの関連付け等を別で管理できる機能を作ってもらった結果、プログラマが 1 日かかるタスクをデザイナーが 1、2 時間作業することで達成できた事もあります。</p>
<h2 id="スケジュールに余裕がない場合" class="unnumbered">スケジュールに余裕がない場合</h2>
<p>　UI が開発フローの下流部分に位置する場合、開発スケジュールの後半に多数の発注が来ます。そうなると実装に精いっぱいで、テストして調整を入れる余裕は無くなってしまいます。このような事態を避けるためには、より正確な見積りが重要になってきますが、その際はプログラマのタスクも考慮しましょう。</p>
<p>　可能であれば担当プログラマのタスクをデザイナー側で細かく管理するのが良いです。把握しておく事が重要です。</p>
<p>　これらは一見デザイナー側の負担が増えているようにも思えますが、全体の進行をスムーズにする上では非常に有効な手段です。例え少し煩わしい作業が増えたとしても、これはデザイナーの仕事ではないと一線を引かず、チャレンジすることが結果としてトータルスピードを早め、正解に近づく近道になります。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/" class="external text" title="https://creativecommons.org/licenses/by/3.0/" rel="nofollow">CC-by-3.0</a> でライセンスされています。</p>
<nav>
<ul class="nav-links">
<li class="prev-article"><a href="game126.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">一覧</a></li>
<li class="next-article"><a href="game128.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
