<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<link rel="stylesheet" href="../css/style_en.css"/>
<title>97 Things Every Programmer Should Know.</title>
<meta property="og:title" content="97 Things Every Programmer Should Know.">
<meta property="og:type" content="website">
<meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/prog97_en.png">
<meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/prog_en/index.htm">
<meta property="og:locale" content="en_US">
</head>
<body>
<h1>97 Things Every Programmer Should Know.</h1>

<ol>
<li><a href="Act_with_Prudence.htm">Act with Prudence</a> by Seb Rose</li>
<li><a href="Apply_Functional_Programming_Principles.htm">Apply Functional Programming Principles</a> by Edward Garson</li>
<li><a href="Ask_What_Would_the_User_Do_You_Are_not_the_User.htm">Ask "What Would the User Do?" (You Are not the User)</a> by Giles Colborne</li>
<li><a href="Automate_Your_Coding_Standard.htm">Automate Your Coding Standard</a> by Filip van Laenen</li>
<li><a href="Beauty_Is_in_Simplicity.htm">Beauty Is in Simplicity</a> by J&#xf8;rn &#xd8;lmhe</li>
<li><a href="Before_You_Refactor.htm">Before You Refactor</a> by Rajith Attapattu</li>
<li><a href="Beware_the_Share.htm">Beware the Share</a> by Udi Dahan</li>
<li><a href="The_Boy_Scout_Rule.htm">The Boy Scout Rule</a> by Uncle Bob</li>
<li><a href="Check_Your_Code_First_before_Looking_to_Blame_Others.htm">Check Your Code First before Looking to Blame Others</a> by Allan Kelly</li>
<li><a href="Choose_Your_Tools_with_Care.htm">Choose Your Tools with Care</a> by Giovanni Asproni</li>
<li><a href="Code_in_the_Language_of_the_Domain.htm">Code in the Language of the Domain</a> by Dan North</li>
<li><a href="Code_Is_Design.htm">Code Is Design</a> by Ryan Brush</li>
<li><a href="Code_Layout_Matters.htm">Code Layout Matters</a> by Steve Freeman</li>
<li><a href="Code_Reviews.htm">Code Reviews</a> by Mattias Karlsson</li>
<li><a href="Coding_with_Reason.htm">Coding with Reason</a> by Yechiel Kimchi</li>
<li><a href="A_Comment_on_Comments.htm">A Comment on Comments</a> by Cal Evans</li>
<li><a href="Comment_Only_What_the_Code_Cannot_Say.htm">Comment Only What the Code Cannot Say</a> by Kevlin Henney</li>
<li><a href="Continuous_Learning.htm">Continuous Learning</a> by Clint Shank</li>
<li><a href="Convenience_Is_not_an_-ility.htm">Convenience Is not an -ility</a> by Gregor Hohpe</li>
<li><a href="Deploy_Early_and_Often.htm">Deploy Early and Often</a> by Steve Berczuk</li>
<li><a href="Distinguish_Business_Exceptions_from_Technical.htm">Distinguish Business Exceptions from Technical</a> by Dan Bergh Johnsson</li>
<li><a href="Do_Lots_of_Deliberate_Practice.htm">Do Lots of Deliberate Practice</a> by Jon Jagger</li>
<li><a href="Domain-Specific_Languages.htm">Domain-Specific Languages</a> by Michael Hunger</li>
<li><a href="Dont_Be_Afraid_to_Break_Things.htm">Don't Be Afraid to Break Things</a> by Mike Lewis</li>
<li><a href="Dont_Be_Cute_with_Your_Test_Data.htm">Don't Be Cute with Your Test Data</a> by Rod Begbie</li>
<li><a href="Dont_Ignore_that_Error.htm">Don't Ignore that Error!</a> by Pete Goodliffe</li>
<li><a href="Dont_Just_Learn_the_Language_Understand_its_Culture.htm">Don't Just Learn the Language, Understand its Culture</a> by Anders Nor&#xe5;s</li>
<li><a href="Dont_Nail_Your_Program_into_the_Upright_Position.htm">Don't Nail Your Program into the Upright Position</a> by Verity Stob</li>
<li><a href="Dont_Rely_on_Magic_Happens_Here.htm">Don't Rely on "Magic Happens Here"</a> by AlanGriffiths</li>
<li><a href="Dont_Repeat_Yourself.htm">Don't Repeat Yourself</a> by Steve Smith</li>
<li><a href="Dont_Touch_that_Code.htm">Don't Touch that Code!</a> by Cal Evans</li>
<li><a href="Encapsulate_Behavior_not_Just_State.htm">Encapsulate Behavior, not Just State</a> by Einar Landre</li>
<li><a href="Floating-point_Numbers_Arent_Real.htm">Floating-point Numbers Aren't Real</a> by Chuck Allison</li>
<li><a href="Fulfill_Your_Ambitions_with_Open_Source.htm">Fulfill Your Ambitions with Open Source</a> by Richard Monson-Haefel</li>
<li><a href="The_Golden_Rule_of_API_Design.htm">The Golden Rule of API Design</a> by Michael Feathers</li>
<li><a href="The_Guru_Myth.htm">The Guru Myth</a> by Ryan Brush</li>
<li><a href="Hard_Work_Does_not_Pay_Off.htm">Hard Work Does not Pay Off</a> by Olve Maudal</li>
<li><a href="How_to_Use_a_Bug_Tracker.htm">How to Use a Bug Tracker</a> by Matt Doar</li>
<li><a href="Improve_Code_by_Removing_It.htm">Improve Code by Removing It</a> by Pete Goodliffe</li>
<li><a href="Install_Me.htm">Install Me</a> by Marcus Baker</li>
<li><a href="Inter-Process_Communication_Affects_Application_Response_Time.htm">Inter-Process Communication Affects Application Response Time</a> by Randy Stafford</li>
<li><a href="Keep_the_Build_Clean.htm">Keep the Build Clean</a> by Johannes Brodwall</li>
<li><a href="Know_How_to_Use_Command-line_Tools.htm">Know How to Use Command-line Tools</a> by Carroll Robinson</li>
<li><a href="Know_Well_More_than_Two_Programming_Languages.htm">Know Well More than Two Programming Languages</a> by Russel Winder</li>
<li><a href="Know_Your_IDE.htm">Know Your IDE</a> by Heinz Kabutz</li>
<li><a href="Know_Your_Limits.htm">Know Your Limits</a> by Greg Colvin</li>
<li><a href="Know_Your_Next_Commit.htm">Know Your Next Commit</a> by Dan Bergh Johnsson</li>
<li><a href="Large_Interconnected_Data_Belongs_to_a_Database.htm">Large Interconnected Data Belongs to a Database</a> by Diomidis Spinellis</li>
<li><a href="Learn_Foreign_Languages.htm">Learn Foreign Languages</a> by Klaus Marquardt</li>
<li><a href="Learn_to_Estimate.htm">Learn to Estimate</a> by Giovanni Asproni</li>
<li><a href="Learn_to_Say_Hello_World.htm">Learn to Say "Hello, World"</a> by Thomas Guest</li>
<li><a href="Let_Your_Project_Speak_for_Itself.htm">Let Your Project Speak for Itself</a> by Daniel Lindner</li>
<li><a href="The_Linker_Is_not_a_Magical_Program.htm">The Linker Is not a Magical Program</a> by Walter Bright</li>
<li><a href="The_Longevity_of_Interim_Solutions.htm">The Longevity of Interim Solutions</a> by Klaus Marquardt</li>
<li><a href="Make_Interfaces_Easy_to_Use_Correctly_and_Hard_to_Use_Incorrectly.htm">Make Interfaces Easy to Use Correctly and Hard to Use Incorrectly</a> by Scott Meyers</li>
<li><a href="Make_the_Invisible_More_Visible.htm">Make the Invisible More Visible</a> by Jon Jagger</li>
<li><a href="Message_Passing_Leads_to_Better_Scalability_in_Parallel_Systems.htm">Message Passing Leads to Better Scalability in Parallel Systems</a> by Russel Winder</li>
<li><a href="A_Message_to_the_Future.htm">A Message to the Future</a> by Linda Rising</li>
<li><a href="Missing_Opportunities_for_Polymorphism.htm">Missing Opportunities for Polymorphism</a> by Kirk Pepperdine</li>
<li><a href="News_of_the_Weird_Testers_Are_Your_Friends.htm">News of the Weird: Testers Are Your Friends</a> by Burk Hufnagel</li>
<li><a href="One_Binary.htm">One Binary</a> by Steve Freeman</li>
<li><a href="Only_the_Code_Tells_the_Truth.htm">Only the Code Tells the Truth</a> by Peter Sommerlad</li>
<li><a href="Own_and_Refactor_the_Build.htm">Own (and Refactor) the Build</a> by Steve Berczuk</li>
<li><a href="Pair_Program_and_Feel_the_Flow.htm">Pair Program and Feel the Flow</a> by Gudny Hauknes, Ann Katrin Gagnat, and Kari R&#xf8;ssland</li>
<li><a href="Prefer_Domain-Specific_Types_to_Primitive_Types.htm">Prefer Domain-Specific Types to Primitive Types</a> by Einar Landre</li>
<li><a href="Prevent_Errors.htm">Prevent Errors</a> by Giles Colborne</li>
<li><a href="The_Professional_Programmer.htm">The Professional Programmer</a> by Uncle Bob</li>
<li><a href="Put_Everything_Under_Version_Control.htm">Put Everything Under Version Control</a> by Diomidis Spinellis</li>
<li><a href="Put_the_Mouse_Down_and_Step_Away_from_the_Keyboard.htm">Put the Mouse Down and Step Away from the Keyboard</a> by Burk Hufnagel</li>
<li><a href="Read_Code.htm">Read Code</a> by Karianne Berg</li>
<li><a href="Read_the_Humanities.htm">Read the Humanities</a> by Keith Braithwaite</li>
<li><a href="Reinvent_the_Wheel_Often.htm">Reinvent the Wheel Often</a> by Jason P Sage</li>
<li><a href="Resist_the_Temptation_of_the_Singleton_Pattern.htm">Resist the Temptation of the Singleton Pattern</a> by Sam Saariste</li>
<li><a href="The_Road_to_Performance_Is_Littered_with_Dirty_Code_Bombs.htm">The Road to Performance Is Littered with Dirty Code Bombs</a> by Kirk Pepperdine</li>
<li><a href="Simplicity_Comes_from_Reduction.htm">Simplicity Comes from Reduction</a> by Paul W. Homer</li>
<li><a href="The_Single_Responsibility_Principle.htm">The Single Responsibility Principle</a> by Uncle Bob</li>
<li><a href="Start_from_Yes.htm">Start from Yes</a> by Alex Miller</li>
<li><a href="Step_Back_and_Automate_Automate_Automate.htm">Step Back and Automate, Automate, Automate</a> by Cay Horstmann</li>
<li><a href="Take_Advantage_of_Code_Analysis_Tools.htm">Take Advantage of Code Analysis Tools</a> by Sarah Mount</li>
<li><a href="Test_for_Required_Behavior_not_Incidental_Behavior.htm">Test for Required Behavior, not Incidental Behavior</a> by Kevlin Henney</li>
<li><a href="Test_Precisely_and_Concretely.htm">Test Precisely and Concretely</a> by Kevlin Henney</li>
<li><a href="Test_While_You_Sleep_and_over_Weekends.htm">Test While You Sleep (and over Weekends)</a> by Rajith Attapattu</li>
<li><a href="Testing_Is_the_Engineering_Rigor_of_Software_Development.htm">Testing Is the Engineering Rigor of Software Development</a> by Neal Ford</li>
<li><a href="Thinking_in_States.htm">Thinking in States</a> by Niclas Nilsson</li>
<li><a href="Two_Heads_Are_Often_Better_than_One.htm">Two Heads Are Often Better than One</a> by Adrian Wible</li>
<li><a href="Two_Wrongs_Can_Make_a_Right_and_Are_Difficult_to_Fix.htm">Two Wrongs Can Make a Right (and Are Difficult to Fix)</a> by Allan Kelly</li>
<li><a href="Ubuntu_Coding_for_Your_Friends.htm">Ubuntu Coding for Your Friends</a> by Aslam Khan</li>
<li><a href="The_Unix_Tools_Are_Your_Friends.htm">The Unix Tools Are Your Friends</a> by Diomidis Spinellis</li>
<li><a href="Use_the_Right_Algorithm_and_Data_Structure.htm">Use the Right Algorithm and Data Structure</a> by JC van Winkel</li>
<li><a href="Verbose_Logging_Will_Disturb_Your_Sleep.htm">Verbose Logging Will Disturb Your Sleep</a> by Johannes Brodwall</li>
<li><a href="WET_Dilutes_Performance_Bottlenecks.htm">WET Dilutes Performance Bottlenecks</a> by Kirk Pepperdine</li>
<li><a href="When_Programmers_and_Testers_Collaborate.htm">When Programmers and Testers Collaborate</a> by Janet Gregory</li>
<li><a href="Write_Code_as_If_You_Had_to_Support_It_for_the_Rest_of_Your_Life.htm">Write Code as If You Had to Support It for the Rest of Your Life</a> by Yuriy Zubarev</li>
<li><a href="Write_Small_Functions_Using_Examples.htm">Write Small Functions Using Examples</a> by Keith Braithwaite</li>
<li><a href="Write_Tests_for_People.htm">Write Tests for People</a> by Gerard Meszaros</li>
<li><a href="You_Gotta_Care_about_the_Code.htm">You Gotta Care about the Code</a> by Pete Goodliffe</li>
<li><a href="Your_Customers_Do_not_Mean_What_They_Say.htm">Your Customers Do not Mean What They Say</a> by Nate Jackson</li>
</ol>

</body>
</html>
