<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【57】「もうすぐ」よりも「今」を大切に - プロジェクト・マネジャーが知るべき 97 のこと</title>
  <meta property="og:title" content="【57】「もうすぐ」よりも「今」を大切に | プロジェクト・マネジャーが知るべき 97 のこと">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/mngr97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr057.htm">
  <meta property="og:site_name" content="プロジェクト・マネジャーが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <script type="text/javascript" src="../js/darkmode.js"></script>
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e57">【57】「もうすぐ」よりも「今」を大切に<span id="color-scheme"></span></h1>
<div class="author">
スコット・デイビス（Scott Davis）
</div>
<div class="author_address">
アメリカ、コロラド州ブルームフィールド
</div>
<p>　私のお気に入りの言葉に、「大げさな表現は控え目な表現よりも何百万倍もわるい」があります。この言葉のプロジェクトマネジメント版は、「『今』というのは『もうすぐ』よりも何百万倍もよく、『後で』よりも、何億倍もよい」となるでしょう。</p>
<p>　ソフトウェア開発業界にいる人なら、「バイパーウェア」という言葉を聞いたことがあるはずです。バイパーウェアとは、延々と語られてはいるけれども、実際には一度も実現されたことのないソフトウェアのことです。私たちはソフトウェアの開発計画を立案できます。そして、そのソフトウェアが実現する機能について議論できます。しかし、さわって、動かして、やりとりできる現物のソフトウェアの方が、要件を完全に記述したワードのドキュメントよりも何百万倍もすぐれています。</p>
<p>　これはソフトウェアのコードを「今」すぐに書くことを意味しています。あなたが作ったプロトタイプは、今すぐにユーザビリティに関するフィードバックを与えてくれます。パフォーマンスを心配しているのですか？　動くソフトウェアなしに、どうやってパフォーマンスを最適化するのでしょうか？</p>
<p>　アジャイルソフトウェア開発はすばやいイテレーションに注力することで、「もうすぐ」よりも「今」を大切にしています。たいていの場合、イテレーションはわずか 1 ～ 2 週間です。つまり、できるだけすばやくコードを書いてユーザーに届けるのです。もしユーザーが気に入れば、あなたの勝利です。それ以上に重要なことは、もしユーザーが気に入らなくても、早く失敗できるということです。</p>
<p>　早く成功することは遅く成功するよりも百倍よいことにすぎませんが、早く失敗することは遅く失敗するよりも百万倍もよいことなのです。遅く失敗するよりも早く失敗した方が、ソフトウェアを見直して、再調整し、書き直すための時間が与えられます。出荷の 1 週間前に問題が見つかると、もう出荷停止にせざるを得ないでしょう。しかし、初期の段階で失敗したとしても、実際にソフトウェアが動き始める頃には、もうだれもそのことを覚えていないのです。</p>
<p>　たとえ新機能を追加しても、使っているプログラミング言語やフレームワークのせいですぐには公開できないのであれば、あなたが使っているツールには問題があります。コードをコンパイルするのに数秒、数分といったオーダーではなく数時間もかかるのであれば、早期に頻繁にビルドすることはできないでしょう。ソフトウェア開発にこうした不備な点があると、あなたは競争上明らかに不利になります。あなたが毎日使っている有名な Web サイトの多くは、30 分足らずで新機能を公開できるのです。</p>
<p>　アジャイル開発者は、ソフトウェアをすばやく作ることで得た品質のおかげで、業界をリードしています。彼らは自分たちのコードを絶えずテストしています。ソフトウェア開発ライフサイクルの最後になってから、ユニットテストやインテグレーションテストを書いているのでしょうか？　いいえ、そんなことはありません。彼らは「今」テストを書いているのです。テストファーストやテスト駆動開発というのは、ソフトウェア開発のトップ企業の「慣習」です。テストは重要です。今すぐやるくらいに重要なのです。</p>
<p>　ソフトウェアプロジェクトの成功に計画は必要不可欠ではない、というわけではありません。最新のソフトウェアプラクティスやユーザーの期待に基づいて、計画を立案しましょう。ソフトウェアが簡単に、自由に、即座にできるようになったこの時代に、手書きしたコードを細心の注意を払ってパンチカードに転記して、それを靴箱に入れてシステム管理者のもとに運んでいた時代の方法論はもはや通用しません。私たちは今の時代にいるのです。それに合わせてプロセスもうまく調整しなくてはなりません。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>

<div>
    <a class="sns-button" href="https://twitter.com/share?url=https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr057.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/twitter.svg"></a>
    <a class="sns-button" href="https://www.facebook.com/share.php?u=https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr057.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/facebook.svg"></a>
    <a class="sns-button" href="https://b.hatena.ne.jp/add?mode=confirm&url=https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr057.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/hatebu.svg"></a>
    <a class="sns-button" href="https://getpocket.com/edit?url=https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr057.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/pocket.svg"></a>
</div>

<nav>
<ul class="nav-links">
<li class="prev-article"><a href="mngr056.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">一覧</a></li>
<li class="next-article"><a href="mngr058.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
