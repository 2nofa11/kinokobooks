<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【13】熟練と並の開発者の生産性 - プロジェクト・マネジャーが知るべき 97 のこと</title>
  <meta property="og:title" content="【13】熟練と並の開発者の生産性 | プロジェクト・マネジャーが知るべき 97 のこと">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/mngr97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr013.htm">
  <meta property="og:site_name" content="プロジェクト・マネジャーが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <script type="text/javascript" src="../js/darkmode.js"></script>
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e13">【13】熟練と並の開発者の生産性<span id="color-scheme"></span></h1>
<div class="author">
ニール・フォード（Neal Ford）
</div>
<div class="author_address">
アメリカ、ジョージア州アトランタ
</div>
<p>　さて、初めてソフトウェアプロジェクトにアサインされたプロジェクト・マネジャーのために、開発者のスキルに関する神話のウソを暴いていきましょう。本当にすぐれたソフトウェア開発者は、並の開発者よりもはるかに生産性が高いことを理解しましょう。実際のところ、本当にすぐれた開発者はそうでない開発者よりも、何桁もすぐれているという統計すらあります。1 桁というのは 10 倍ということです。要するに言いたいことは、熟練したプログラマというのは並のプログラマよりも少々すぐれているどころではない、ということです。その違いはとてつもなく大きいのです。</p>
<p>　新たにトレーニングを受けたソフトウェアプロジェクト・マネジャーにとって、このことは製品開発を計画するときにどんな意味があるのでしょう？　マネジャーは、たとえ優秀で才能ある開発者が手に入らなくても、二流の開発者からも何かしら有用なものが得られるものと考えています。これは間違いです。下手な溝掘りでもいつかは溝を掘れるでしょうが、ソフトウェアの開発は溝掘りとは違うのです。</p>
<p>　ソフトウェア開発では、今日プログラムされたものが明日の基盤となります。二流の開発者に基盤を作らせてしまうと、本当にすぐれた開発者は前へ進む前に、後ろへ戻って欠陥を修正しなくてはなりません。二流もしくは並の開発者を雇うと、プロジェクトのベロシティは低下します。実際のところ、すぐれた人を加えるよりもダメな人をチームから外した方が有益なのです。</p>
<p>　このことと、遅延したプロジェクトに人員を追加するとプロジェクトはさらに遅延する、という事実とを合わせて考えてみましょう。そうすれば、ほとんどの企業において、開発がゆっくりとしたペースでしか進まないのはなぜなのか、理解できるはずです。経験の浅いソフトウェアプロジェクト・マネジャーは、たとえば、倉庫係を増員すればするほど、すばやくトラックに荷積みできるのだから、プログラマも追加で雇えば雇うほど、プロジェクトを完了させるのに必要な時間も短縮できるはずだと思うのです。</p>
<p>　しかし、これはうまくいきません。新しい人員をプロジェクトにキャッチアップさせるのには時間がかかりますし、ほかのプログラマの手をわずらわせることにもなります。さらに、チームに人員を追加するたびに、コミュニケーションチャンネルは増えていきます。ベッツィー・スーとビルの 2 名からなるチームでは、チャンネルはひとつです。そこにマイクが加わると、チャンネルは 3 つに増えます。こうしてチャンネル数は指数的に増大し続けるのです。</p>
<p>　チャンネル数の算出式は、 <code>n(n-1)/2</code> になります。12 名からなるチームには、 <code>12(12-1)/2</code> のチャンネルがあります。言い換えると、プロジェクト・マネジャーとして管理しなければならない関係が 66 もあるということです。さらにもう 1 名増えると、管理すべきコミュニケーションチャンネルは 78 になります。</p>
<p>　並の開発者とともにソフトウェアを作ることで、プロジェクトの神話のウソが 2 つ暴かれます。ひとつは人員を追加することでプロジェクトを短縮できるという神話、もうひとつは並の開発者に並のペースで並の（バグのある / 仕事以前の）コードを作らせても問題ないという神話です。実際には、並の開発者は全体の生産性の足を引っ張り、プロジェクトを完了させるのに必要以上の時間がかかってしまうのです。</p>
<p>　解決策はあるのでしょうか？　はい、すぐれた開発者に強力なツールを与えましょう。そうすれば、もっと高品質なソフトウェアを、もっとすばやく手に入れることができます。それからもうひとつ、無能な人がいてもプロジェクトには役に立ちません。それどころか、ダメな開発者の面倒まで見なければいけないとなると、職人気質のすぐれた開発者の生産性は低下してしまいます。ソフトウェアは非常に複雑なので、工場の組み立てライン作業のようにはいかないのです。</p>
<p>　もっとすばやいソフトウェア開発があなたの望みですか？　それなら、すばらしいソフトウェア開発者を雇うこと、そして育てることにもっとお金をかけましょう。短期的にも長期的にも、元が取れるはずです。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>

<div>
    <a class="sns-button" href="https://twitter.com/share?url=https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr013.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/twitter.svg"></a>
    <a class="sns-button" href="https://www.facebook.com/share.php?u=https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr013.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/facebook.svg"></a>
    <a class="sns-button" href="https://b.hatena.ne.jp/add?mode=confirm&url=https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr013.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/hatebu.svg"></a>
    <a class="sns-button" href="https://getpocket.com/edit?url=https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr013.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/pocket.svg"></a>
</div>

<nav>
<ul class="nav-links">
<li class="prev-article"><a href="mngr012.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">一覧</a></li>
<li class="next-article"><a href="mngr014.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
