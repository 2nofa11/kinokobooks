<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【16】さあ、プラクティスを投げ捨てよう - プロジェクト・マネジャーが知るべき 97 のこと</title>
  <meta property="og:title" content="【16】さあ、プラクティスを投げ捨てよう | プロジェクト・マネジャーが知るべき 97 のこと">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/mngr97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr016.htm">
  <meta property="og:site_name" content="プロジェクト・マネジャーが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <script type="text/javascript" src="../js/darkmode.js"></script>
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e16">【16】さあ、プラクティスを投げ捨てよう</h1>
<div class="author">
ナレシュ・ジャイン（Naresh Jain）
</div>
<div class="author_address">
インド、ムンバイ市マラド
</div>
<p>　うまくいっているチームがやっていて、ほかのチームがやっていないことは何でしょう？　うまくいっているチームは定期的に自分たちのプラクティスに疑問を持ち、ムダなものを排除しようとします。ソフトウェアだけでなくプロセスも容赦なくリファクタリングするのです。</p>
<p>　“Il semble que la perfection soit atteinte non quand il n’y a plus rien ? ajouter, mais quand il n’y a plus rien ? retrancher.”　このフランス語の文章はアントワーヌ・ド・サン=テグジュペリから引用したもので「完璧であるということは、付け加えるべきものがなくなったときではなく、取り去るべきものがなくなったときである」という意味です。</p>
<p>　どうしてチームはこの原則を適用しないのでしょう？　どうしてしばらくすると、最終製品の価値がどんどんやせ細っていき、プロセスや副産物がどんどんふくれ上がっていくのでしょう？　どうしてコードの行数が増えているのに、ソフトウェアの有用な機能はどんどん失われていくのでしょう？</p>
<p>　以下に、ソフトウェア開発プロセスにおける「亀裂」を示す指標を挙げます。</p>
<ul>
<li>コードの行数やムダな機能という観点から、ソフトウェアが膨張する。</li>
<li>ソフトウェアを開発するチームがどんどん大きくなる。</li>
<li>プロセスがどんどん杓子定規で独断的で、融通の利かないものになる。</li>
<li>チームが「計画倒れ（death by planning）」のミーティングを体験する。</li>
<li>ドキュメントやサポートすべき生成物の量が指数的に増える。</li>
<li>顧客テストグループから、新たなバグが絶えず殺到する。</li>
</ul>
<p>　チームリーダーはプロセスやチェック、監査を増やしてしまいがちです。プロセスをもっと厳格にすることで、問題が解決すると思い込んでいるのです。私の経験から言って、これはプロセスの問題ではありません。プロセスをさらに増やすことは、チームが問題の根本原因を認識することを、さらに難しくしているだけなのです。</p>
<p>　どうしてほとんどのチームは、チームにとって役に立たないプロセスを投げ捨てることを怖がっているのでしょう？　どうしてチームは、使い捨てのプラクティスを追加していくのではなく、思いつく限りの多数のプラクティスから始めようとするのでしょう？</p>
<p>　そもそもこれは、そのプロセスを使っている理由をチームが本当は理解していない印なのかもしれません。あるいは、ソフトウェア開発プロセスを十分理解していない人が、高圧的にチームに方法論を強いているのかもしれません。いずれにせよ、プロジェクトは「砂上の楼閣」になって、今にもくずれて無用なコードの山になるおそれがあります。真の理由を理解せずに何かを変更しようとすると、プロジェクトは価値を高めることなく膨張していき、結局使えないものになるのです。</p>
<p>　私が思うに、すぐれたプロジェクト・マネジャーはチームがうまく機能しているか、健康状態を把握すべきです。プロジェクト・マネジャーは一歩後ろに下がって、チームに課せられたプロセスが、動作するソフトウェアのスループットにどんな影響を及ぼしているのか、評価するべきです。</p>
<p>　聡明なプロジェクト・マネジャーであれば、チームに依頼される可能性のあるアクティビティから取捨選択して、プロジェクトの成功に不可欠なものだけを維持すべきです。過去のプロジェクトから受け継がれたプラクティスを一掃することで、チームの生産性とスループットは短期間で大きく改善するはずです。</p>
<p>　「過ぎたるは及ばざるがごとし」というのは、プロセスに関する非常に重要な哲学なのです。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>
<nav>
<ul class="nav-links">
<li class="prev-article"><a href="mngr015.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">一覧</a></li>
<li class="next-article"><a href="mngr017.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
