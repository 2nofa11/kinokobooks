<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【29】労力ではなく結果を評価する - プロジェクト・マネジャーが知るべき 97 のこと</title>
  <meta property="og:title" content="【29】労力ではなく結果を評価する">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/mngr97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr029.htm">
  <meta property="og:site_name" content="プロジェクト・マネジャーが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e29">【29】労力ではなく結果を評価する</h1>
<div class="author">
ベンカト・スブラマニアム（Venkat Subramaniam）
</div>
<div class="author_address">
アメリカ、コロラド州ブルームフィールド
</div>
<p>　ソフトウェア開発には多大な労力が必要です。とはいえ、「300 万行を超えるアプリケーションを開発している」という自慢話を耳にしたら、それだけのコードが本当に必要なのか尋ねてみましょう。</p>
<p>　余計なコードが追加されるのは、たいていの場合、拡張性を考慮しすぎたためです。拡張性は重要ですが、正しくやらないと逆効果になる恐れがあります。プロジェクトを遅延させる原因にもなりかねません。</p>
<p>　プロジェクトスコープ外の余計なコードがあるということは、プロジェクト・マネジャーが余計な時間と余計な労力に見返りを与えているということです。もしプログラマは長時間仕事をするのが当たり前だと思い込んでいるなら、実際にプログラマがそれだけの成果を生み出せているか確かめましょう。</p>
<p>　私は自宅の芝生を青々とさせたくて、毎日の水やりをスプリンクラーに任せています。ところがコロラドでの最初の夏、カエデの木のひとつがすっかり葉を落としていることに気づきました。私は暑くて乾燥しているのが原因だと考え、もっと水をやりました。ところが一向に改善する気配は見られません。専門家に助言を求めると、彼は私にこう尋ねました。「どれくらいの頻度でどれくらいの時間、水をやっていますか？」　私の答えを聞いて彼はこう言いました。「それが問題です！　水をやる頻度と時間を半分に減らしてください。そうすればよくなるでしょう。」</p>
<p>　私は水のやりすぎで木を枯らしてしまうところでした。水やりを少なくすることが、実際には木のためになるのです。それが木の抵抗力をつけ、成長の助けになるのです。アドバイスにしたがってから 2 週間後、木は健康を取り戻し、青々とした葉でいっぱいになりました。</p>
<p>　勤務時間に関して、プログラマはカエデの木のようなものです。プログラマに短いけれども適度な時間と、大雑把に定義されたタスクを少し与えてみましょう。するとプログラマはいきいきと働きます。彼らに大きなタスクの束を与えて、定期的に残業するよう頼んでみましょう。するとプログラマは意気消沈します。しかも既存のコードを書き直して、さらにややこしくしたりするのです。なぜなら彼らには時間があり余っているためです。</p>
<p>　私はみんながどれだけの時間働いているかを重視しているマネジャーの下で働いたことがあります。そのマネジャーは、従業員が実際に生み出すものよりも、土曜日の朝に仕事をしたり晩遅くまで残ったりすることの方が重要だと考えていました。しかし、プログラマが 1 日に 12 時間以上も高い生産性を維持して、効率よく仕事をするというのは、実際のところ不可能なのです。</p>
<p>　別のチームのマネジャーは、従来通り 8 時間の勤務スケジュールを守らせていました。確かに従業員が遅くまで居残る日もありましたが、それはノルマではなく例外でした。従業員は長時間仕事をするよう要求されていないことを知っていましたが、コミットした成果物をスケジュール通りに提供しなければなりませんでした。そのため、チームは注意散漫になることなく仕事に集中し、仕事をうまく優先順位付けして、時間を効果的に活用しました。開発者の能力ではどちらのチームも同程度でしたが、前者の消耗するまで仕事をするチームよりも後者のチームの方が多くのことを成し遂げていました。</p>
<p>　プログラマには、どれだけ仕事をしたかではなく、彼らが実際にやった結果を報告させるようにしましょう。コンピュータの前でどれくらい時間を費やしたかよりも、結果を得ることに関心をもちましょう。あなたは結果指向のマネジャーであり時間指向のマネジャーではないとチームメンバーが実感すれば、彼らも自分たちの勤務時間ではなく、自分たちが達成した結果に注目するようになるでしょう。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>
<nav>
<ul class="nav-links">
<li class="prev-article"><a href="mngr028.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">インデックス</a></li>
<li class="next-article"><a href="mngr030.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
