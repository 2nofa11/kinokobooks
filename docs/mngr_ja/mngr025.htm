<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【25】Wiki を使う - プロジェクト・マネジャーが知るべき 97 のこと</title>
  <meta property="og:title" content="【25】Wiki を使う | プロジェクト・マネジャーが知るべき 97 のこと">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/mngr97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr025.htm">
  <meta property="og:site_name" content="プロジェクト・マネジャーが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <script type="text/javascript" src="../js/darkmode.js"></script>
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e25">【25】Wiki を使う</h1>
<div class="author">
エイドリアン・ワイブル（Adrian Wible）
</div>
<div class="author_address">
アメリカ、ニューヨーク州ニューヨーク
</div>
<p>　Wiki はプロジェクト情報へのアクセスを集中させるのに、すばらしい仕組みを提供してくれます。うまく活用できれば、1 日に何度も更新されて、チームメンバーのデスクトップに常時開かれるようになるはずです。</p>
<p>　プロジェクトの実作業に必要となる貴重な脳細胞をムダ使いしないよう、Wiki に入れておくと便利なページについて紹介しましょう。以下に挙げたものは一般的な例なので、自分のソフトウェアプロジェクトに合わせてカスタマイズしてください。</p>
<ul>
<li><strong>ステークホルダー</strong>：最新のプロジェクト状況、短期的課題、長期的課題、リスク、予算管理、マイルストーン実績などを書く場所を作りましょう。</li>
<li><strong>開発者</strong>：QA データベースに接続するためのコネクション文字列といった情報を書いておきましょう。そうすれば同僚のプログラマが手当たり次第にソースコードをあさって、時間をムダにするようなことはなくなります。コーディング標準、ビルドおよびデプロイ手順、よくはまる落とし穴、DI（Dependency Injection）など進んだコーディングテクニックなどに関する情報も共有しましょう。</li>
<li><strong>一般情報</strong>：プロジェクト・マネジャーはここに、ヘルプデスクの電話番号、チームの役割と責任、個々のチームメンバーの連絡先といった役立つ情報を書いておくべきです。</li>
<li><strong>チームのカレンダー</strong>：ここにはチームのカレンダーを貼っておきましょう。iFrame を使って Google カレンダーを埋め込むというテクニックもあります。</li>
<li><strong>ミーティング議事録</strong>：ミーティング議事録を保管しておきましょう。そうすれば、過去のミーティングで話された詳細について、簡単に記憶を呼び起こすことができます。また、将来のミーティングに向けた調査や準備をするために、過去の議事録をすばやく参照することもできます。</li>
<li><strong>ミーティング議題</strong>：ステークホルダーが今後の議題をオンラインで提案できる仕組みを提供しましょう。もちろん、プロジェクト・マネジャーの承認、チーム全員への提示、次回のミーティング議題の締め切りにしたがってください。</li>
<li><strong>ビジネスアナリスト</strong>：ビジネスアナリストは開発者の仕事場に同席していないことが多いでしょう。ここは複数の場所からアクセスでき、作業中のドキュメントとドメイン成果物をまとめておくのにふさわしい場所です。</li>
<li><strong>テスター</strong>：組織によっては、テスト責任をプログラマから分離しているかもしれません。ここはテスターとプログラマ、2 つのチームの情報センターとして機能します。Selenium、QTP、Quality Center といったテスティングツールの使い方などを載せておきましょう。オンラインでバグトラッキング手順を検討、議論し、その最終結論を載せておいてもよいでしょう。</li>
</ul>
<p>　Wiki を使うときのコツをいくつか挙げておきます。</p>
<ul>
<li>情報をコピーしてはいけません。情報がほかのところにあるなら、Wiki にコピーするのではなく、その情報へのリンクにしましょう。</li>
<li>情報が古くなっていないかどうか確認するために、適宜更新されているか目を光らせましょう。Wiki にある情報が古いと、みんな使うのをやめてしまいます。</li>
<li>できれば情報をリアルタイムデータ駆動にしてみましょう。実際のプロジェクトデータからチャートやステータスが生成できるような Wiki インターフェイスをもつプロジェクトマネジメントツールを探しましょう。こうしたツールを利用すれば、進行中の作業についてリアルタイムのステータスが得られます。</li>
</ul>
<p>　また、メール経由で情報を送るとき、特に添付ファイル（ドキュメント、プロジェクト計画、予算情報など）を送るときには、Wiki を使った方がよくないか必ず検討すべきです。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>
<nav>
<ul class="nav-links">
<li class="prev-article"><a href="mngr024.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">一覧</a></li>
<li class="next-article"><a href="mngr026.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
