<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【14】大きさが重要 - プロジェクト・マネジャーが知るべき 97 のこと</title>
  <meta property="og:title" content="【14】大きさが重要">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/mngr97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr014.htm">
  <meta property="og:site_name" content="プロジェクト・マネジャーが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e14">【14】大きさが重要</h1>
<div class="author">
アヌパム・クンドゥ（Anupam Kundu）
</div>
<div class="author_address">
アメリカ、ニューヨーク州ニューヨーク
</div>
<p>　プロジェクトの大きさ、チームの大きさ、成果物の大きさ、チェックリストの大きさ。プロジェクトのあらゆるものが、その大きさに依存しています。大きさによって、ゲームをどうプレイするかのルールが変わってきます。</p>
<p>　プロジェクトが（その大きさや複雑さにおいて）大きくなればなるほど、プロジェクト・マネジャーがプロジェクトを管理可能なモジュールに分割し、これらモジュールの納品責任を有能なメンバーと共有することが重要になってきます。これによって、プロジェクト・マネジャーを含むプロジェクトのキーメンバーは、些細なことにとらわれることなく、プロジェクトの健康状態を調べて、その「全体像」を把握できるようになります。</p>
<p>　分散したプロジェクトは通常のプロジェクトと比べても大きくなりがちです。プロジェクト・マネジャーがその大きさを管理するためにどんな方針をとるかが、実際にプロジェクトの最終結果に大きな影響を及ぼします。「大きい」という言葉からは、さまざまなイメージが頭に浮かびます。8 人で 12 か月かけてやる仕事（小さなベンダー）から、何百人もかけて年間メンテナンス契約を締結してやる仕事（クライアント向けの巨大な IT パートナー）まで、あらゆるものを意味します。</p>
<p>　プロジェクトを適切な大きさに分割した小さなパーツが、どのようにプロジェクト全体の成功を左右するのか、全員が確実に理解するための方法を以下に提案します。</p>
<ul>
<li>プロジェクトを、独立しながらも管理可能なワークストリームにできるだけたくさん分割すること。</li>
<li>各ワークストリームに納品責任を持つ重要な窓口を少なくとも一名配置すること。</li>
<li>できれば、複数のワークストリームに役割を持つキーメンバーを配置すること。こうすることで「全体像」をチーム間でシェアすることができます。</li>
<li>各ワークストリームの進捗を（何らかのツールを使って）個別に追跡すること。そして、プロジェクト全体の鼓動が感じられるよう、定期的に評価指標と関連付けること。</li>
<li>リスク、課題、前提、各ワークストリームの依存関係をそれぞれ文書化して共有すること。</li>
<li>チームの定例ミーティングを開催して、すべてのワークストリームの状況を共有すること。</li>
<li>プロジェクト全体のロードマップを公表すること。これには個々のワークストリームのリリース計画も含まれます。</li>
<li>オンラインツールを積極的に利用して、ユーザー要求、マイルストーンの更新、バグレポート、レポートスケジュール、リスクを共有すること。</li>
</ul>
<p>　例えば、バージョンが 3 つ（北米、アジア太平洋、中東）ある Web サイトの構築を任されたとしましょう。あなたは 3 つの異なるワークストリームを作って、それぞれ独立した納品窓口を置くのがよいと判断できます。これら 3 つのサイトはみな、基本的には同じサイトの別バージョンなので（中程度のカスタマイズ）、何名かのキーメンバーを 3 つのワークストリームにまたがるよう配置しましょう。そうしておけば、彼らはサイト全体の整合性を確保しつつ、どのように実装詳細を再利用すればよいか提案できます。</p>
<p>　また、ひとつのプロジェクトに複数のシステムインテグレータがかかわる場合もあるでしょう。各インテグレーションポイント（あるいは関連するものをいくつかまとめたもの）を個別のワークストリームに分割するのが理想的でしょう。こうしておけば、複数の作業を同時に進めることができ、納品期間を短縮できるかもしれません。全体の品質を調整するために、さまざまなチームを毎日のミーティングに参加させましょう。</p>
</article>
<footer>
<p class="license">This work is licensed under a <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">Creative Commons Attribution 3</a></p>
</footer>
</body>
</html>
