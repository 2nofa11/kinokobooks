<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【05】複雑よりもシンプルな方がいい - プロジェクト・マネジャーが知るべき 97 のこと</title>
  <meta property="og:title" content="【05】複雑よりもシンプルな方がいい">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/mngr97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr005.htm">
  <meta property="og:site_name" content="プロジェクト・マネジャーが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <script type="text/javascript" src="../js/darkmode.js"></script>
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e05">【05】複雑よりもシンプルな方がいい</h1>
<div class="author">
スコット・デイビス（Scott Davis）
</div>
<div class="author_address">
アメリカ、コロラド州ブルームフィールド
</div>
<p>　私に言わせれば、電子レンジには「1 分加熱」というボタンが 1 つあれば十分です。コーヒー用の水を沸かすときには、そのボタンを 3 回押します。クラッカーにのせるチーズを溶かすときには、ボタンを 1 回押します。小麦粉のトルティーヤを温めるときには、「1 分加熱」ボタンを 1 回押してから 15 秒後にドアを開けます。</p>
<p>　このワンボタン電子レンジが、商品企画委員会をパスしたことはあるのでしょうか？　おそらくないでしょうね。今の電子レンジの（決して使われることのない）機能を見れば、委員会がシンプルなものより複雑なものを好んでいることがわかります。もちろん、彼らはその「複雑さ」を「機能豊富」という言い回しで隠したのでしょう。しかし、いたずらに複雑な製品を作ることを目標にして作り始める人などいません。複雑さは知らず知らずのうちについてくるのです。</p>
<p>　1 枚の冷凍ピザを温めたいとしましょう。メーカーの取扱説明書によると、まず「メニュー」ボタンを押さなくてはなりません。すると今度は「スピード調理」と「再加熱」というオプションが現れました。（うーん、おそらく「再加熱」でしょうね。お腹がすいているので、スピードの早い方がよいのですが）</p>
<p>　「再加熱」を選ぶと、今度は「飲み物」、「パスタ」、「ピザ」、「料理皿」、「ソース」、「スープ」というオプションが現れました。さて、どれでしょう？（ピザの上にはソースがのっているのですが、ここでは「ピザ」を選ぶことにします）。すると今度は「惣菜 / 生もの」か「冷凍」です。（実際にはどちらでもありません。これは宅配ピザの残り物なのです。おそらく「惣菜 / 生もの」を選ぶのでしょう。）すると今度は「1 枚」、「2 枚」、「3 枚」、「4 枚」ですって？　この質問があとどれくらい続くのか、私には見当もつきません。そこで私は「キャンセル」を押して、「1 分加熱」ボタンを押すことにします。</p>
<p>　この話はソフトウェア開発とどんな関係があるのでしょうか？　私に言わせれば、ワンボタン機能があるのは Amazon だけです。つまり「1-Click 購入」です。確かに初回は住所とクレジットカード番号を入力する必要がありますが、以後はマウスを 1 回クリックするだけで衝動買いできるのです。</p>
<p>　一般的に、ソフトウェアは複雑な問題を解決してくれるものです。ここで問題になるのは、本来の複雑さをどれくらいエンドユーザーに強いるかです。あなたのソフトウェアは複雑さの増幅器になっていませんか？　一般的に、すばらしいソフトウェアというのは複雑さを吸収してくれるものです。問題をユーザーに伝えるのではなく、ユーザーの身代りとなって問題の矢面に立つのです。</p>
<p>　ソフトウェアプロジェクト・マネジャーとして、あなたは複雑さを吸収しようとしていますか？　それとも、複雑さの増幅器になっていますか？　最高のプロジェクト・マネジャーは、あらゆるところ（プログラマ、エンドユーザー、マネジメント）に存在する複雑さを吸収します。決してそれを増幅することはありません。エンドユーザーは一見して矛盾のある要求をするものです。プロジェクト・マネジャーの仕事は、そうした矛盾のある要求の整理を手伝うことです。やみくもに要求を開発者に伝えることが仕事なのではありません。開発者は難解な技術的理由を挙げて、要求を満たせないことを説明するものです。プロジェクト・マネジャーの仕事は、その複雑さを言い換えて（吸収して）、エンドユーザーに別の選択肢を選ばせるのに役立つ情報を提供することです。</p>
<p>　あなたのアプリケーションはどれくらい簡単に使えますか？　アプリケーションに新しい機能を追加するのはどれくらい簡単ですか？　新しい機能を要求するのはどれくらい簡単ですか？　バグレポートはどうですか？　新しいバージョンの展開はどうですか？　不具合のあるバージョンを元に戻すのはどうですか？</p>
<p>　知らず知らずのうちにシンプルになるわけではありません。自分たちで積極的に育てていく必要があります。よく注意していないと、ものごとは複雑になるものなのです。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>
<nav>
<ul class="nav-links">
<li class="prev-article"><a href="mngr004.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">一覧</a></li>
<li class="next-article"><a href="mngr006.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
