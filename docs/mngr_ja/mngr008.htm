<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【08】シンプルにいこう - プロジェクト・マネジャーが知るべき 97 のこと</title>
  <meta property="og:title" content="【08】シンプルにいこう | プロジェクト・マネジャーが知るべき 97 のこと">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/mngr97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr008.htm">
  <meta property="og:site_name" content="プロジェクト・マネジャーが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <script type="text/javascript" src="../js/darkmode.js"></script>
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e08">【08】シンプルにいこう<span id="color-scheme"></span></h1>
<div class="author">
クリシュナ・カダリ（Krishna Kadali）
</div>
<div class="author_address">
インド、ハイデラバード県コンダプール
</div>
<p>　ステークホルダーは必要以上に事態を複雑にするものです。これはソフトウェアプロジェクトでよく見られる失敗の原因のひとつです。チームメンバーはプロジェクトの目的と実際の作業全体を可視化する必要があります。ところがステークホルダーは自分の頭の中で、魔法のようなステップによってプロジェクトを完成させてしまいます。彼らはそれがどんなに複雑であろうとも、最終的な解決策にいとも簡単に到達できると思っているのです。</p>
<p>　ステークホルダーはソフトウェアプロジェクトを画一的で巨大な怪物のようにしてはいけません。そうではなく、コツを心得た多層的なチーム構成として、各層が互いに成熟度を高められるようにすべきです。本当のところ、これ以外に方法はありません。たとえ要件が完全だったとしても、必ず変更は発生します。もしソフトウェアに柔軟性がなく、要件の変更にすばやく適応できないのなら、始まる前からプロジェクトはすでに死んでいます。シンプルにしておくために、次の 2 つのことを心に留めておきましょう。</p>
<ul>
<li><p><strong>要件をシンプルにしておくこと。</strong> ビジネスアナリストは頭に浮かんだ具体的な解決策と、ビジネス要求に基づく実際の顧客要求とを混同してしまいがちです。たとえ実際の要件が極めてシンプルなものであっても、ビジネスアナリストとプログラマ / 開発者とのあいだにはコミュニケーション・ギャップが生じます。お互いに相手が何をしているのか、本当のところ理解していないのです。</p>
<p>ビジネスアナリストはシンプルなツリー構造をイメージして要件を書くべきです。ルートにある要件がプロジェクト全体のシンプルな目的になります。親レベルの要件は子レベルの要件へと分岐することができます。それぞれの要件が明瞭になるまで、このプロセスを繰り返します。このアプローチを使って要件を文書化するときには、マインドマップ用のソフトウェアを使うと便利です。要件の一部が明瞭になれば、そこから開発を始めても構いません。</p></li>
<li><p><strong>アジャイル開発プロセスにしたがうこと。</strong> 要件の一部が特定できれば、開発チームはすぐにプロトタイピングを開始できます。プロトタイプが動くようになると、ステークホルダーはそれをテストして、フィードバックすることができます。顧客のフィードバックは要件が正確であることを確実にしてくれます。また、実際の顧客からビジネスアナリストを経由してプロジェクトチームへと伝えられるうちに、どんなギャップが要件に生じたのかを特定するのにも役立ちます。顧客にプロトタイプを見せることで、開発者がイメージした解決策が、実際に顧客が思い描いていたものと合っているかをチェックすることもできます。</p>
<p>もしギャップがあれば、それを新たな要件として、開発者はプロトタイプをやり直します。このサイクルを繰り返すのです。各サイクルはできるだけ短期間にすべきです。2～3 週間を超えてはいけません。</p>
<p>要件の一部を定義し、記述された要件を満たすプロトタイプを作り、そのフィードバックを得るというサイクルによって、プロジェクトのステークホルダー全員が常に同じ考えを持てるようになります。このようなシンプルなテクニックにきちんとしたがうことによって、すべてのソフトウェアプロジェクトは最終的に成功するはずです。プロジェクトの成功が、顧客の幸せと有用なビジネス機能を提供する動くソフトウェアを提供することだと定義されていれば、なおさらです。</p></li>
</ul>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>

<div>
    <a class="sns-button" href="https://twitter.com/share?url=https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr008.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/twitter.svg"></a>
    <a class="sns-button" href="https://www.facebook.com/share.php?u=https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr008.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/facebook.svg"></a>
    <a class="sns-button" href="https://b.hatena.ne.jp/add?mode=confirm&url=https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr008.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/hatebu.svg"></a>
    <a class="sns-button" href="https://getpocket.com/edit?url=https://yoshi389111.github.io/kinokobooks/mngr_ja/mngr008.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/pocket.svg"></a>
</div>

<nav>
<ul class="nav-links">
<li class="prev-article"><a href="mngr007.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">一覧</a></li>
<li class="next-article"><a href="mngr009.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
