<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<link rel="stylesheet" href="../css/style_en.css"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
<title>Requirement Specifications: An Oxymoron - Project Manager 97Things</title>
<meta property="og:title" content="Requirement Specifications: An Oxymoron">
<meta property="og:type" content="article">
<meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/mngr97_en.png">
<meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/mngr_en/Requirement_Specifications_-_an_Oxymoron.htm">
<meta property="og:site_name" content="97 Things Every Project Manager Should Know.">
<meta property="og:locale" content="en_US">
<script type="text/javascript" src="../js/darkmode.js"></script>
</head>
<body>
<article>
<header>
<h1>Requirement Specifications: An Oxymoron</h1>

<p><b>Alan Greenblatt</b>
<i>Sudbury, Massachusetts, USA</i></p>
</header>

<p>Good requirements (R) describe how features of a product are going to solve particular existing or potential problems. Good features (F), sometimes called functionality, are added to products to address those important problems. Requirements are captured by salespeople or created by software project managers. 
</p>
<ul>
<li>We can't sell the product outside of the United States.(R) We need to provide internationalization and location support.(F)</li>
<li>Users have to click 5 buttons to complete a very simple task. They get frustrated and never complete the task. We need to simplify the user interface (R) and reduce the number of button clicks to 2 or less to complete the same tasks.(F)</li>
</ul>
<p>Specifications (S) on the other hand, describe exactly how problems will be solved and the requirements will be met. Using the examples above, the following specifications might be written by systems architects.
</p>
<ul>
<li>We will extract all text strings, including popup messages, and place them in external resource bundles.(S)</li>
<li>The application will be enhanced so that all text displayed on the screen will be retrieved from these resource bundles.(S)</li>
<li>Localization can be performed by creating specific resource bundles for the locales required.(S)</li>
<li>The functionality achieved through clicking buttons 1, 2 and 3 will be bundled into a single button click on Button A.(S)</li>
<li>Existing buttons 4 and 5 functionality will be bundled into Button B.(S)</li>
</ul>
<p>Blurring the lines between requirements and specifications leads to the wrong people making the decisions. You either end up with the software developers making decisions about what features are important to a user, or with a software project manager telling a developer how to structure code. Either way, the result is a poor final software product.
</p><p>Developers aren't usually out talking to customers, users, marketing, sales, and potential partners, trying to understand what new features are most important. On the other hand, software project managers usually aren't skilled developers who understand how best to implement a feature, and how their untrained, although well-meaning, specification suggestions would affect other aspects of the product. Each group has a unique skill set.
</p><p>Having good requirements that describe the problem you are trying to solve, and why it is so important to solve this particular problem, lets the programmer be more flexible, efficient, and motivated during the development process. Coders can make independent design decisions as they work on the problem and understand it more thoroughly. They should only be bound by the technologies they have chosen to use, not by strict, brittle specifications created by a non-programmer.
</p><p>Specifications still need to be written, but they will change. Have you come to the end of the product development cycle and only then fully understood how this product should have been built in the first place?
</p><p>Keep the <i>what you are trying to build</i> separate from the <i>how to build it</i>. Then, let the properly trained team member make decisions based on his/her project role.
</p>

<footer>
<p class="license">This work is licensed under a <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">Creative Commons Attribution 3</a></p>

</footer>
</article>
</body>
</html>

