<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<link rel="stylesheet" href="../css/style_en.css"/>
<title>How Do You Define &quot;Finished&quot;? - Project Manager 97Things</title>
<meta property="og:title" content="How Do You Define &amp;quot;Finished&amp;quot;?">
<meta property="og:type" content="article">
<meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/mngr97_en.png">
<meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/mngr_en/How_Do_You_Define_Finished.htm">
<meta property="og:site_name" content="97 Things Every Project Manager Should Know.">
<meta property="og:locale" content="en_US">

</head>
<body>
<article>
<header>
<h1>How Do You Define &quot;Finished&quot;?</h1>

<p><b>Brian Sam-Bodden</b>
<i>Scottsdale, Arizona, U.S.</i></p>
</header>

<p>It is hard for a software development team to succeed if there isn't a clear definition of what success means. For developers, success entails delivering a product that meets customer expectations. However, to define total project success, we need an accurate, shared definition among the larger project team of what it means to &#x201c;finish the project.&#x201d;</p>
<p>To embrace the overall project scope, the core tenet of traditional, iterative software development is divide and conquer. The project is broken into deliverables, which are then divided into work packages. Those are ultimately broken into activities assigned to a specific person.</p>
<p>Using an agile approach with one-to several-week iterations, or work periods, the necessity to consider overall project scope can be masked. Finishing the goals of one iteration can be clearly set out as creating working software that passes unit tests, possibly clears limited integration tests, and allows promised software features to be demo'd to the stakeholders for their approval and feedback.</p>
<p>The problem is that at the macro level, a project has many other considerations beyond the code and its accompanying tests. Using the traditional waterfall method, testing was relegated to the end of a project and became a flaw in the process. In a more agile approach, developers may erroneously defer or dismiss all the nonprogramming items or activities as not having a place in their view of what a software project entails.</p>
<p>Some of these items may be unit and integration testing between a newly created component/feature and the components/features created in prior iterations.</p>
<p>These often-overlooked integrations underscore a fundamental problem for development teams. The complexity of software seems to be geometrically proportional to the number of component interconnections. Don't ignore the time needed to craft a demo environment, and do write user-level/acceptance testing scripts and create accompanying documentation. No matter how light your methodology, shippable software requires a certain level of documentation.</p>
<p>When these items are not ignored, the macro definition of what it means to be &#x201c;finished&#x201d; differs significantly from the accumulated finishing of a set of features within an iteration. And, the delta created from a buildup of those missing items per iteration can alter the way a feature is implemented, tested, and perceived by the customer.</p>
<p>Let's not overburden our developers with administrative or business issues. The underlying concept we need to spread is that iterations are not just for software developers. They must be coordinated with tasks important to the larger, general software project team members. Business analysts, software project managers, and quality testers must coordinate their crucial activities with those of the developers.</p>
<p>The person responsible for this coordination is the software project manager, who must understand and spread the overall definition of what it means to be finished at the macro level so that the non-code-based activities are performed side by side with the weekly iteration work. The project manager must be the arbiter between the development team and the other stakeholders to define what it truly means to be &#x201c;finished.&#x201d;</p>

<footer>
<p class="license">This work is licensed under a <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">Creative Commons Attribution 3</a></p>

</footer>
</article>
</body>
</html>

