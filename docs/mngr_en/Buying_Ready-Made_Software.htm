<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<link rel="stylesheet" href="../css/style_en.css"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
<title>Buying Ready-Made Software - Project Manager 97Things</title>
<meta property="og:title" content="Buying Ready-Made Software">
<meta property="og:type" content="article">
<meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/mngr97_en.png">
<meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/mngr_en/Buying_Ready-Made_Software.htm">
<meta property="og:site_name" content="97 Things Every Project Manager Should Know.">
<meta property="og:locale" content="en_US">
<script type="text/javascript" src="../js/darkmode.js"></script>
</head>
<body>
<article>
<header>
<h1>Buying Ready-Made Software</h1>

<p><b>Ernani Marques da Silva, MBA, PMP, PgMP</b>
<i>Mairipora, Sao Paulo, Brazil</i></p>
</header>

<p>Currently, it is very common and useful to buy software that is ready-made and ready to be tested, implemented, and used out of the box. Why? Such software allows organizations to leverage their efficiency and optimize their effectiveness by cutting time spent in the developmental and implementation phases. In this kind of purchase, you are not only buying the software, but the know-how of the company that wrote the software.
</p><p>Of course, each organization has its own procedures, policies, and legacy software (e.g. accounting systems, security software, etc.). Therefore, new software often has to be customized in order to support the company policies and procedures, and to integrate the programs with previously installed legacy systems. In many cases, the vendor will capture the knowledge for that customization during the pre-sales process.
</p><p>This is the point where the major problems may arise. Even if you follow a very detailed procurement process, it is very complicated to determine whether certain functionalities (e.g. formulas, data entry screens, integration with legacy software, etc.) inherent in the new application will work as business/product area requirements intended. Once the procurement process is complete, the contract is signed, and the project plan is approved and in implementation, issues can pop-up during testing phase. The troubles can be related to the customization or, in the worst case scenario, related to the functionality that the software was assumed to have based on the demo.
</p><p>It is very important to follow specific steps before the contract is signed:
</p><p><b>a)</b> prepare a very detailed checklist regarding the company's software needs;
</p><p><b>b)</b> visit the company and prepare a Due Diligence Report; 
</p><p><b>c)</b> prepare a Vendor Evaluation Report, Test Cases, and Test Plan;
</p><p><b>d)</b> make sure the Test Case is completed and documented;
</p><p><b>e)</b> follow the Test Plan/Cases before the contract is signed.
</p><p>The gaps, and plan by which the gaps will be bridged, should be understood and approved by both companies. After this process is carefully followed and documented, you will have very clear information by which to determine which software should be purchased, the estimated time required for software customization, and the actual associated costs.  You will save money and time in the long run.
</p><p>It sounds as if a lot of time will be spent before the vendor is selected and contract is signed. Yes, but it is better to invest this time rather than waiting until the software is in your hands to be installed.  If too many incompatibilities are discovered during testing, or worst case scenario, after the software is already deployed to the final user, costs will skyrocket.
</p><p>To recap, when the decision to buy ready-made software occurs in your company, spend more time identifying the real need and researching the functional and technical details of the software chosen before purchase. Use this approach whether the software provider is well-know or new to you, and whether it is a low-impact desktop application or a more crucial server side application that could bring the company to its knees.
</p>

<footer>
<p class="license">This work is licensed under a <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">Creative Commons Attribution 3</a></p>

</footer>
</article>
</body>
</html>

