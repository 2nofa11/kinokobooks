<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<link rel="stylesheet" href="../css/style_en.css"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
<title>Go Ahead, Throw That Practice Out - Project Manager 97Things</title>
<meta property="og:title" content="Go Ahead, Throw That Practice Out">
<meta property="og:type" content="article">
<meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/mngr97_en.png">
<meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/mngr_en/Go_ahead_throw_that_practice_out.htm">
<meta property="og:site_name" content="97 Things Every Project Manager Should Know.">
<meta property="og:locale" content="en_US">

</head>
<body>
<article>
<header>
<h1>Go Ahead, Throw That Practice Out</h1>

<p><b>Naresh Jain</b>
<i>Malad, Mumbai, India</i></p>
</header>

<p>What do successful teams do that others don't? They constantly question their own practices and try to eliminate wasteful ones. They mercilessly refactor their processes along with their software.
</p><p>"Il semble que la perfection soit atteinte non quand il n'y a plus rien &#xe0; ajouter, mais quand il n'y a plus rien &#xe0; retrancher." - Antoine de Saint Exup&#xe9;ry.  This French quote means &#x201c;Perfection is attained, not when there is nothing more to add, but when there is nothing left to take away&#x201d;.
</p><p>Why don't teams apply this principle today? Why is it that over a period of time, the value of the end product gets thinner and thinner and the process and by-products get bulkier and bulkier? Why do the lines of code expand, while the useful features of the software become fewer and fewer? 
</p><p>Key indicators that things are &#x201c;broken&#x201d; in the software development processes:
</p>
<ul>
<li> the software bloats up in terms of lines of code and useless features,</li>
<li> the team building the software keeps growing in size,</li>
<li> the process they use gets more and more prescriptive, dogmatic, and rigid,</li>
<li> the team is experiencing &#x201c;death by planning&#x201d; meetings,</li>
<li> the amount of documents and supporting artifacts increases exponentially,</li>
<li> and newly discovered bugs keeps pouring in from customers test groups.</li>
</ul>
<p>Team leaders have a tendency to keep adding more process, more checks, and more audits, thinking that an increasingly stringent process will solve the problem. In my experience, it's never a process issue. Adding more processes will only make it that much more difficult for the team to see the root cause of the real problem.
</p><p>Why is it that most teams are afraid to throw away practices that are not really helping the team? Why do teams start of with as many practices they can think of, instead of adding the practices just-in-time?
</p><p>This could be a symptom of the team not really understand why they are using the process in the first place. Or it could mean that someone who does not fully understand the software development process is forcing a heavy-handed methodology upon the team. In either case, the project becomes a "house-of-cards" ready to disintegrate into a useless pile of code bits. Trying to change anything, without understanding the true reason the project is expanding without adding value, is useless.
</p><p>In my opinion, a good project manager should have a healthy grasp of how the team is working. He/she should be able to stand back and evaluate how each process imposed on the team impacts the throughput of functional software. 
</p><p>A knowledgeable project manager should sift through all the possible activities a team might be asked to do and retain only those that are vital to the success of this specific project. Once the leftover practices from projects past are swept away, the team's productivity and throughput should get better in a short period of time.
</p><p>"Less is More" is a very important philosophy when it comes to process.
</p>

<footer>
<p class="license">This work is licensed under a <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">Creative Commons Attribution 3</a></p>

</footer>
</article>
</body>
</html>

