<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<link rel="stylesheet" href="../css/style_en.css"/>
<title>Meetings Don't Write Code - Project Manager 97Things</title>
<meta property="og:title" content="Meetings Don't Write Code">
<meta property="og:type" content="article">
<meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/mngr97_en.png">
<meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/mngr_en/Meetings_dont_write_code..htm">
<meta property="og:site_name" content="97 Things Every Project Manager Should Know.">
<meta property="og:locale" content="en_US">

</head>
<body>
<article>
<header>
<h1>Meetings Don't Write Code</h1>

<p><b>William J. Mills</b>
<i>Castro Valley, California, USA</i></p>
</header>

<p>Too often, people who could be doing something more productive are trapped in meetings. Meetings that have wandered off their intended purpose, run over time, or have trapped an entire team in the room when a more limited set of people would be just as effective. Only schedule meetings that have a specific purpose, and only include people on the invitation list who need to be there. Here's an obvious list of things to avoid, as software project manager, when you are planning your team meetings.
</p>
<ul>
<li>No chit chat. If you have participants who use this time to have informal project related exchanges, remind them to come a few minutes early or plan to spend time together after the meeting. You can't afford for the entire group to wait until they finish chatting.</li>
<li>Get in, get done, get out. Plan a clear agenda that is distributed beforehand. If you assemble the entire team, be sure your topics are relevant to everyone.</li>
<li>Diving too deep. It is good when risk issues or roadblocks which have arisen are brought up. However, this is not the place to hammer out the solutions. Form smaller groups, or designate the appropriate team member to pursue this issue after the meeting.</li>
</ul>
<p>The minute software engineers start talking about specific implementation details, have them make a note to remain after the main meeting and move on with your scheduled agenda.
</p>
<ul>
<li>Going off-topic. The current meeting has a specific purpose. Don't lose that focus. There will be things that come up that are important, but not on topic, You may have too many non-essential people there, or you might be missing key stakeholders necessary to solve this issue. Schedule another meeting, or finish the current one and deal with the new issue at the end. Remember to let the folks who don't need to be there get back to work.</li>
<li>Going over time. As a project manager, you expect your team to be able to estimate the amount of time it will take them to complete a specific task. It will be detrimental to the schedule if they go too far over the budgeted time in your meeting.</li>
<li>Meeting too often. If you are following an agile methodology, quick daily meetings are necessary. If not, be sure the meetings you hold cover information or collect data that couldn't be assembled in another way.</li>
<li>Indulging Long-winded participants. As the leader of the meeting, it is your job to use a non-verbal &#x201c;stop&#x201d; (hold up the palm of the hand toward the speaker) and smile. Say, &#x201c;Your point is well-taken, but in the interest of time we are going to need to move on&#x201d; (or hear from others, or come back to this point later if there is time).</li>
</ul>
<p>As you are the leader on the project, team members may feel they can't speak up about unproductive meetings. So, evaluate your own practices and see if you can improve them on your own.
</p>

<footer>
<p class="license">This work is licensed under a <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">Creative Commons Attribution 3</a></p>

</footer>
</article>
</body>
</html>

