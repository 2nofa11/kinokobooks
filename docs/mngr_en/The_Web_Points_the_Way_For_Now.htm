<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<link rel="stylesheet" href="../css/style_en.css"/>
<title>The Web Points the Way, for Now - Project Manager 97Things</title>
<meta property="og:title" content="The Web Points the Way, for Now">
<meta property="og:type" content="article">
<meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/mngr97_en.png">
<meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/mngr_en/The_Web_Points_the_Way_For_Now.htm">
<meta property="og:site_name" content="97 Things Every Project Manager Should Know.">
<meta property="og:locale" content="en_US">

</head>
<body>
<article>
<header>
<h1>The Web Points the Way, for Now</h1>

<p><b>David Wood</b></p>
</header>

<p>There is a charity group whose slogan is, &#x201c;We stand on the shoulders of those who came before us. We provide the shoulders for those who follow us&#x201d;. This quote is relevant for us as software developers. As each new architecture, language, or platform rises to prominence, we tend to sigh, &#x201c;This is the answer to all of our programming problems.&#x201d;. And while it may solve today's issues, tomorrow there will be new challenges facing us.
</p><p>Currently, we know of exactly one software architecture that scales to billions of users and does so while being robust* to failures of individual components: The World Wide Web. The Web is the largest, most used, and most robust information retrieval system ever built by humankind - so far.
</p><p>Why does the Web work so well? Roy Fielding, a founder of the vaunted Apache** project, researched this very question. Fielding evaluated the architecture of an idealized version of the early Web and extracted architectural style elements from it.
</p><p>The result was a new software architectural style with the properties that we have come to love about the Web. They are robust to both change and failure of specific components. They separate concerns so we stop caring about implementation details such as programming languages. They use a common &#x201c;lingua franca&#x201d; (a language for communication between those not speaking a common mother tongue) to exchange language-neutral requests for information. They scale mightily. They are stateless.
</p><p>Not every Web site uses these guiding principles, but many do and the Web as a whole uses them. However, these are only the shoulders on which the continuous development of new and innovative architectures will rest.
</p><p>We can learn important things from the Web's success. Perhaps the most important is that Moore's Law*** now allows us to accept a great deal of abstraction in our system design. Instead of being overly efficient with our hardware and software, we can now think about being overly stable, overly robust, overly scalable, and overly flexible. And we can accept the inefficiencies of our current architectures, knowing full well that they are only a foundation for future innovations.
</p><p>Distributed systems, like the Web, are hard to design. Perhaps this is because each of us is an individual. We treat our software systems like something that an individual creates, centralized as we each see the world. The Web's distributed systems have shown us the way, though. Distributed systems are harder to conceptualize, and thus harder to create, but creating them is worth the effort.
</p><p>Naturally, technology changes. Ideas and techniques change, too. The simple Web of Fielding's description is not the modern Web. Nor will it be the Web of the future. The Web may not always point the way. The key to adapting to new systems will be to design flexibility into our systems now. Only then can we begin to create living, breathing, adaptive software systems that are ready to integrate with new discoveries, providing the shoulders for those who follow us.
</p>
<ul>
<li>Robust - capable of coping well with variations, sometimes unpredictable ones, with minimal damage, alteration or loss of functionality.</li>
<li>Apache project - an open source project to develop and maintain free web server software for modern operating systems.</li>
<li>Moore's Law - This law describes a long-term trend in computer hardware in which the number of transistors that can be placed, inexpensively, on an integrated circuit has increased exponentially.</li>
</ul>


<footer>
<p class="license">This work is licensed under a <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">Creative Commons Attribution 3</a></p>

</footer>
</article>
</body>
</html>

