<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<link rel="stylesheet" href="../css/style_en.css"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
<title>Empowering Developers: A Man Named Tim - Project Manager 97Things</title>
<meta property="og:title" content="Empowering Developers: A Man Named Tim">
<meta property="og:type" content="article">
<meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/mngr97_en.png">
<meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/mngr_en/Empowering_Developers_or_a_story_of_a_man_named_Tim.htm">
<meta property="og:site_name" content="97 Things Every Project Manager Should Know.">
<meta property="og:locale" content="en_US">
<script type="text/javascript" src="../js/darkmode.js"></script>
</head>
<body>
<article>
<header>
<h1>Empowering Developers: A Man Named Tim</h1>

<p><b>Ken Sipe</b>
<i>St. Charles, Missouri, USA</i></p>
</header>

<p>Often the best thing a software project manager can do is set the vision, set the priorities, and get out of the way. Here's a true story about a man named Tim.
</p><p>We found we needed another team member on our project, so we posted the opening and began to interview. One individual soon rose to the top of our candidate list.
</p><p>His name was Tim. Tim stood out significantly from the other applicants, and it would have been a &#x201c;no-brainer&#x201d; decision to hire him. But, there was one dissenting vote. All resources hired into our department may rotate between any one of three project managers. One of those PMs had previous experience working with Tim, and indicated Tim lacked motivation. She painted a picture of Tim web surfing, regularly, while on the job, and being a slacker.
</p><p>This was a tough situation. When making a hiring decision, more weight would normally be applied to a project manager's personal experience with the candidate as compared to a cold interview. However, from a technical perspective, Tim's skills significantly exceeded those of other candidates. He was hired despite the dissenting vote.
The project was run using an Agile development methodology, so we had an open meeting at the start of the iteration*. The opening meeting has several main purposes:
</p><p>1) Stories** are created and their priority is established and communicated, based on user input.
</p><p>2) A team vision of the project scope is created through the stories, and good acceptance criteria are established.
3) Stories are broken down into tasks and estimated by the developer who is to complete the task.
</p><p>After the meeting, the tasks are entered into the task tracking system. The significance of the task tracking system is often misunderstood. It is used for developers to see what tasks are started, If they have finished their own tasks early, they move on by &#x201c;stealing&#x201d; (or completing) a task not yet begun by the originally assigned developer.
</p><p>Tim turned out to be an outstanding hire. He out produced everyone else on the team. The most obvious measure of his value was in the number of tasks he &#x201c;stole&#x201d; from other developers. Completing more tasks meant the project finished quicker.
</p><p>So the question is why would another PM see Tim as unproductive? On closer look, it became evident that the Tim-basher had a management style that was excessively controlling. She would &#x201c;spoon feed&#x201d; tasks to developers and then leave the team workspace to attend meetings. Tim was so fast that he would complete his assigned task immediately. Without any further direction regarding project priorities or tasks he could begin next, he was left idle.
</p><p>You'll be amazed what a good team can do with a clear vision, well-defined acceptance criteria, and shared project priorities not determined by a lone software project manager but known, documented, and managed by the entire team. Sometimes the best thing for the PM to do is get out of the way. Do you manage a Tim?
</p>
<ul>
<li>Iteration - A short period of time chosen by an Agile project team during which a key requirement chosen by the customer will be developed, tested, and then delivered to the customer for approval or comment. </li>
<li>Stories - A high level description of a software requirement, usually broken down into a single developer task, with just enough information to allow a developer to estimate how long it will take to create, test, and/or implement it. </li>
</ul>

<footer>
<p class="license">This work is licensed under a <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">Creative Commons Attribution 3</a></p>

</footer>
</article>
</body>
</html>

