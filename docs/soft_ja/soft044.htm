<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【44】ドワーフ、エルフ、ウィザード、キングの 4 種類の人々 - ソフトウェアアーキテクトが知るべき 97 のこと</title>
  <meta property="og:title" content="【44】ドワーフ、エルフ、ウィザード、キングの 4 種類の人々">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/soft97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/soft_ja/soft044.htm">
  <meta property="og:site_name" content="ソフトウェアアーキテクトが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e44">【44】ドワーフ、エルフ、ウィザード、キングの 4 種類の人々</h1>
<div class="author">
エバン・コフスキー
</div>
<p>　ニール・スティーブンソンの小説『クリプトノミコン』（ハヤカワ文庫 SF）で、ランディ・ウォーターハウスは、自分が会ったさまざまな人々を分類してみせています。</p>
<p>　ドワーフは、真っ暗な洞窟で孤独に美しい人工物を堅実に作り続けるハードワーカーです。彼らは山を動かし、地球の形を変えるような莫大な力を持ち、その腕の確かさを高く評価されています。</p>
<p>　エルフは、優雅で洗練されており、新しくて美しい魔術的なものを作っています。エルフは非常に才能に恵まれているので、他のタイプの人々がそれらのものをほとんど異世界のもののように思っていることに気付くことさえありません。</p>
<p>　ウィザードは、他のタイプとはまったく異なり、非常にパワフルです。エルフとは異なり、魔術とその力や性質を知っており、最高の効果がある場面で魔術を使います。</p>
<p>　しかし、この他にウォーターハウスがそれとなく口に出すものの、具体的には説明していない第 4 のタイプがあります。それがキングで、これら 4 種類のタイプの人々を使って何をしなければならないかを知っている予言者です。</p>
<p>　アーキテクトは、この中のキングのようなところがあります。アーキテクトは、さまざまなタイプの人々についてよく知っており、アーキテクチャーの中でそれぞれに役割を与えます。1 種類の人々だけを引きつけるように設計されたアーキテクチャーは、そのタイプの人たちだけをプロジェクトに集めます。しかし、それぞれのタイプの中でもっとも優秀な人々だけを集めたとしても、そのチームには、問題へのアプローチのしかたが 1 種類しかありませんので、できることは大きく制約されます。</p>
<p>　優れたキングは、クエスト（目標）を通じてあらゆるタイプの人々をリードし、彼らが協力して仕事を完成させられるよう力を貸します。クエストがなければ、ビジョンがないということですから、チームはいずれ烏合の衆になってしまいます。すべてのタイプの人々を揃えていなければ、チームは 1 種類の問題しか解決することができず、その解では先に進めないような障害に直面すると、立ち往生してしまいます。</p>
<p>　アーキテクトは、すべてのタイプの人々を頭に置いてクエストを作ります。すると、アーキテクチャーは、異なるタイプの人々がお互いを学びつつ、進めていける仕事を探すためのガイドとなります。プロジェクトが難題にぶつかっても、チームは解決方法を学んでいるでしょう。なぜなら、アーキテクチャーがメンバーをチームに育て上げるチャンスを与えているからです。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>
<nav>
<ul class="nav-links">
<li class="prev-article"><a href="soft043.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">一覧</a></li>
<li class="next-article"><a href="soft045.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
