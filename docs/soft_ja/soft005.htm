<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【05】パフォーマンスの決め手はアーキテクチャー - ソフトウェアアーキテクトが知るべき 97 のこと</title>
  <meta property="og:title" content="【05】パフォーマンスの決め手はアーキテクチャー">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/soft97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/soft_ja/soft005.htm">
  <meta property="og:site_name" content="ソフトウェアアーキテクトが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e05">【05】パフォーマンスの決め手はアーキテクチャー</h1>
<div class="author">
ランディ・スタッフォード
</div>
<p>　アプリケーションのパフォーマンスの決め手になるのは、アプリケーションのアーキテクチャーです。そんなのは当たり前だと思われるかもしれませんが、現実の世界ではそうでもないのです。たとえば、ミドルウェアの製品を変えるだけで、パフォーマンスの問題が解決すると思っているソフトウェア・アーキテクトは山ほどいます。たぶん、ベンダーが宣伝する「ベンチマークテストの結果は、ライバルと比べて 25% も上回っています」という言葉に踊らされているんでしょう。しかし、アーキテクチャーの効率がとてつもなく悪く、それがパフォーマンスの悪さの根本的な原因になっている場合、ライバル製品なら 4 ミリ秒かかるところを、わずか 3 ミリ秒で処理できると言っても、その 1 ミリ秒、25% の差は、焼け石に水です。</p>
<p>　これは IT マネージャーやベンダーのベンチマーク・チームの言い分ですが、ベンダーのサポート部門やパフォーマンス管理について書くライターには別の言い分があります。メモリー割り当て量、コネクションプール数、スレッドプール数といったものを調整してソフトウェアを「チューニング」すればパフォーマンスが上がるというのです。しかし、予想される負荷と比べてアプリケーションの配備環境が貧弱だったり、そもそものアーキテクチャーがリソースを効率的に使えていなければ、いかにアーキテクトがチューニングしても、パフォーマンスやスケーラビリティは、要求水準にとうてい及ばないでしょう。</p>
<p>　ベンダー製品もアプリケーション・アーキテクチャーも結局のところ、分散コンピューティングの基本原則と物理資源の制約を受けます。アプリケーションにしても、ベンダー製品にしても、ある性能のコンピューターの上でプロセスとして実行され、ネットワークやメモリを介して連携するときにはかならず遅れが生じます。ですから、アプリケーションのパフォーマンスとスケーラビリティを左右する最大の要因は、アプリケーションのアーキテクチャーだということを肝に銘じなければなりません。パフォーマンスやスケーラビリティは、ブランドとか「チューニング」だけでスイッチを押すように改善されるような代物ではないのです。これらを改善したければ、根本的なロジックか配備環境そのもの、あるいはその両方の（再）設計が必要なのです。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>
<nav>
<ul class="nav-links">
<li class="prev-article"><a href="soft004.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">一覧</a></li>
<li class="next-article"><a href="soft006.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
