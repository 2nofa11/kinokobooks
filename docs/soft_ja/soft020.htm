<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【20】継続的にインテグレーションを実行せよ - ソフトウェアアーキテクトが知るべき 97 のこと</title>
  <meta property="og:title" content="【20】継続的にインテグレーションを実行せよ | ソフトウェアアーキテクトが知るべき 97 のこと">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/soft97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/soft_ja/soft020.htm">
  <meta property="og:site_name" content="ソフトウェアアーキテクトが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <script type="text/javascript" src="../js/darkmode.js"></script>
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e20">【20】継続的にインテグレーションを実行せよ<span id="color-scheme"></span></h1>
<div class="author">
デビッド・バートレット
</div>
<p>　ビルド作業が「ビッグバン」イベントだった時代は終わりました。アプリケーション・アーキテクトであれ、エンタープライズ・アーキテクトであれ、アーキテクトは、すべてのプロジェクトで、継続的インテグレーションのメソッドとツールを使うことを提案、推進していかなければなりません。</p>
<p>　継続的インテグレーション（CI）は、マーチン・ファウラーがデザインパターンの中で最初に使った言葉です。CI とは、特定のタスクをこなすために設定したインテグレーション・サーバーのもとで、アプリケーションの自動ビルド、テストを確実かつ頻繁に実行するプラクティスとツールのことです。単体テストのプラクティス / ツールと自動ビルドツールが CI を生み出し、今日のソフトウェアプロジェクトでは必須なものになったのです。</p>
<p>　継続的インテグレーションは、ソースコードをアプリケーションとして動作させるというソフトウェア開発プロセスに共通する重要ポイントをターゲットとしています。ここには開発の多くの要素が集まり、テストされます。皆さんは「早く頻繁にビルドする」というフレーズを耳にしたことがあるでしょうか。これは、開発のインテグレーションで問題が起きないようにするためのリスク管理テクニックでしたが、今や CI に取って代わられています。CI は、ビルドだけでなく、開発チーム内のコミュニケーションや調整を進める機能を含んでいます。</p>
<p>　CI でもっとも有名な機能は、ビルドの自動実行でしょう。あなたが手作業でビルドすることは当然できますが、CI では、夜中にビルドを開始したり、ソースコードの変更とともに自動的にビルドを開始したりすることができます。ビルドが開始されると、最新バージョンのソースコードがレポジトリから取り出され、CI ツールがプロジェクトをビルドしテストします。最後には、ビルドプロセスの詳細なログをまとめたレポートが送られます。レポートは、電子メールやインスタントメッセージなど、さまざまな形態で送ることができます。</p>
<p>　継続的インテグレーションは、開発作業を安定させ、統制の取れたものにすることができます。あなたもアーキテクトとして CI が気に入ると思いますが、それよりも大切なのは、あなたの会社、開発チームがより力を発揮できるようになることです。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>

<div>
    <a class="sns-button" href="https://twitter.com/share?url=https://yoshi389111.github.io/kinokobooks/soft_ja/soft020.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/twitter.svg"></a>
    <a class="sns-button" href="https://www.facebook.com/share.php?u=https://yoshi389111.github.io/kinokobooks/soft_ja/soft020.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/facebook.svg"></a>
    <a class="sns-button" href="https://b.hatena.ne.jp/add?mode=confirm&url=https://yoshi389111.github.io/kinokobooks/soft_ja/soft020.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/hatebu.svg"></a>
    <a class="sns-button" href="https://getpocket.com/edit?url=https://yoshi389111.github.io/kinokobooks/soft_ja/soft020.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/pocket.svg"></a>
</div>

<nav>
<ul class="nav-links">
<li class="prev-article"><a href="soft019.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">一覧</a></li>
<li class="next-article"><a href="soft021.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
