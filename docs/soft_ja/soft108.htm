<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【08】システムではなく、コミュニケーションをデザインせよ - ソフトウェアアーキテクトが知るべき 97 のこと</title>
  <meta property="og:title" content="【08】システムではなく、コミュニケーションをデザインせよ">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/soft97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/soft_ja/soft108.htm">
  <meta property="og:site_name" content="ソフトウェアアーキテクトが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="j08">【08】システムではなく、コミュニケーションをデザインせよ</h1>
<div class="author">
鈴木雄介
</div>
<p>　アーキテクトの仕事というと「システムを設計すること」と思われがちですが、実際にはそうではありません。アーキテクトがデザインすべきなのはコミュニケーションです。システムはコミュニケーションを実現するための手段に過ぎません。</p>
<p>　多くのシステムは、データを登録し、それを取り出すということで成り立っています。では、ユーザーは何をしたいのでしょうか？　ユーザーはデータを登録することも、データを取り出すことも望んでやっているわけではありません。彼らは、誰かとコミュニケーションをして、自分のやりたいことを前に進めたいと思っているだけです。EC サイトでカートボタンを押すのも、伝票の登録ボタンを押すのも、自分の得たいものを得るために「しかたなく」やっていることなのです。</p>
<p>　ですから、アーキテクトはシステムをデザインする前に、コミュニケーションについて考えなくてはいけません。システムは道具です。道具をデザインするのに、その目的を知るのは当然のことでしょう。どんな人たちが、どんな目的で、どんなコミュニケーションをしているのかを知るのです。</p>
<p>　しかし、残念ながらコミュニケーションを理解するのは簡単なことではありません。情報システム同士はメッセージやファイルをやりとりすることで会話します。人間も同じでしょうか？そんな単純ではないことを、皆さんは経験から学んで、いるはずです。盛り上がっている会話の輪があります。あなたがその輪に入りたいなら、まずは慎重に聞き耳を立てて、会話の流れを理解する必要があります。それが完了するまで、あなたは彼らが何の話をしているか、さっぱり分からないでしょう。しかし、一旦、会話の流れを理解できれば、容易に会話の意味が理解できるようになるのです。逆に、たいして理解もせずに思い込みだけで会話に参加すると、トンチンカンな受け答えをしてしまい、恥をかくことになります。</p>
<p>　新しいシステムを設計するときも同じです。あなたは既にコミュニケーションが成立しているところに参加するのです。まずは聞き耳を立てて、その場の流れを理解する必要があります。一般的な知識や業界の知識が役立つこともあるでしょうが、思い込みは禁物です。「顧客」や「伝票」という一般的言葉が、その組織においてどういう意味を持つかは、会話に参加しない限りはっきりしないのです。</p>
<p>　こうした組織における「会話の流れ」は文化や風土と呼ばれているものです。コミュニケーションをデザインするとは、まず、その組織の文化や風土を理解するということなのです。</p>
<p>　こうして、コミュニケーションのことが理解できてきたら、それらをモデル化していきます。モデル化はコミュニケーションの不整合や無駄を暴いてくれます。組織のメンバーは自分がコミュニケーションしている部分しか知らず、企業全体のコミュニケーションを理解しているわけではありません。そういったコミュニケーションの断片を集めてきて、組み立てていくとどうしても不整合や無駄が出てきます。ここを整理していくことで、より強固なシステムを作ることができます。このとき動的なモデル図が役に立ちます。クラス図よりもアクティビティ図、配置図よりもシーケンス図が重要です。</p>
<p>　私は、本来、「システムのユーザー」という存在はいないべきだと思っています。デザイナーの西村佳哲さんは、ユーザーについて次のように述べています。</p>
<blockquote>
<p>書籍ユーザなんていない。いるのは、リーダーです。サーフボードユーザなんていない。いるのは、サーファーです。最終的なゴールは、「ユーザ」と呼ばれる存在のいない経験の総体をデザインすることだ。</p>
</blockquote>
<p>　システムも同じです。システムユーザーはいないほうがいい。いるのは「コミュニケーター（コミュニケーションをする人）」です。アーキテクトは、ユーザーと呼ばれる存在のいない、コミュニケーションの総体をデザインするべきなのです。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>
</footer>
</body>
</html>
