<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【04】まずコミュニケーション、そのための明快さとリーダーシップ - ソフトウェアアーキテクトが知るべき 97 のこと</title>
  <meta property="og:title" content="【04】まずコミュニケーション、そのための明快さとリーダーシップ">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/soft97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/soft_ja/soft004.htm">
  <meta property="og:site_name" content="ソフトウェアアーキテクトが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e04">【04】まずコミュニケーション、そのための明快さとリーダーシップ</h1>
<div class="author">
マーク・リチャーズ
</div>
<p>　ソフトウェア・アーキテクトは、とかく象牙の塔に閉じこもり、仕様や技術上の決定、方向性といったものをデベロッパーに伝えるだけの人になりがちです。しかし、それではチーム内に摩擦が生じ、早晩、メンバーたちの反抗に遭うことになるでしょう。そんなチームが作るソフトウェアは、最初に設定した要件とは似ても似つかぬものになってしまいます。</p>
<p>　ソフトウェア・アーキテクトは、プロジェクトの目的や目標をうまく伝えるコミュニケーションの方法を学ばなければなりません。効果的なコミュニケーションの鍵を握っているのは、明快さとリーダーシップです。</p>
<p>　明快さは、コミュニケーションの取り方の問題です。たとえば、アーキテクチャーの決定事項を 100 ページの文書にまとめても、そんなものを読むメンバーはいません。ソフトウェア・プロジェクトを成功に導くためには、あなたの考えをはっきりと簡潔に伝えることが大切です。プロジェクトの開始時点から、話をシンプルにすることを心がけましょう。間違っても、長ったらしい Word 文書などは書かないことです。Visio のようなツールで簡単な図を書いて、考えを伝えるのです。どうせ頻繁に書き換えることが最初から見えているのですから、図もシンプル・イズ・ベストです。</p>
<p>　ホワイトボードを使ったカジュアルなミーティングも効果的です。あなたのアイデアを浸透させるには、同じチームのデベロッパーや同僚のアーキテクトに集まってもらって、ホワイトボードで説明するのがベストです。</p>
<p>　それから、いつでもデジカメを手元においておきましょう。ホワイトボードにアイデアが満載されているのに、会議室を出たら消えてしまうのでは何とももったいない。写真を撮ってチームの wiki で共有しましょう。長ったらしい Word 文書よりも、まずはアイデアを浸透させることに力を入れてください。アーキテクチャーについての細かい決定事項を記録するなんてことは、後で考えればよいことです。</p>
<p>　そして、リーダーシップです。ソフトウェア・アーキテク卜は、自分がリーダーでもあることを忘れがちです。しかし、健全な職場で能力を発揮するためには、リーダーとして同僚から一目置かれるようにならなければなりません。</p>
<p>　メンバーに全体的な視野や意思決定の理由を伝えなければ、プロジェクトは確実に破滅への道を歩みます。逆に、デベロッパーたちを味方に付ければ、あなたがアーキテクトとして下した決定は当然のこととして受け入れられるようになります。アーキテクチャーの策定プロセスにデベロッパーたちを参加させていれば、彼らから自発的、積極的な姿勢を引き出すことができます。</p>
<p>　デペロッパーたちと対立するのではなく、ともに働くことです。デベロッパーだけでなく、品質管理チーム、ビジネス・アナリスト、プロジェクト・マネージャーなど、すべてのチーム・メンバーが、コミュニケーションとリーダーシップを必要としていることを忘れてはなりません</p>
<p>　あなたが考えを明快に伝え、リーダーシップを発揮すれば、コミュニケーションが円滑になり、健全で強力な職場環境を築くことができます。まず第 1 にコミュニケーション、そのために明快さとリーダーシップを心がけましょう。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>
<nav>
<ul class="nav-links">
<li class="prev-article"><a href="soft003.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">インデックス</a></li>
<li class="next-article"><a href="soft005.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
