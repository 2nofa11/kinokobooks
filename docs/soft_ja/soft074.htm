<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【74】主要な指標の耐久性を試してどこで壊れるかを確かめよ - ソフトウェアアーキテクトが知るべき 97 のこと</title>
  <meta property="og:title" content="【74】主要な指標の耐久性を試してどこで壊れるかを確かめよ | ソフトウェアアーキテクトが知るべき 97 のこと">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/soft97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/soft_ja/soft074.htm">
  <meta property="og:site_name" content="ソフトウェアアーキテクトが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <script type="text/javascript" src="../js/darkmode.js"></script>
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e74">【74】主要な指標の耐久性を試してどこで壊れるかを確かめよ<span id="color-scheme"></span></h1>
<div class="author">
ステファン・ジョーンズ
</div>
<p>　アプリケーション設計の概要は、初期状態では、ビジネス上の要件、既存のあるいは新しく選択されたテクノロジー、パフォーマンスの許容範囲、予想されるデータ量、ビルド / デプロイ / 運用に必要な資金などによって決まります。どんなものであれ、およそソリューションであれば、現状の環境のもとで要求された内容に合致するかそれ以上のものになり、うまく動作するはずです（そうでなければ、まだソリューションになっていません）。</p>
<p>　この段階のソリューションについて、さらに耐久性を試してどこで壊れるかを確かめておきましょう。</p>
<p>　このテストは、たとえば、システムが爆発的な人気を集めて、予想をはるかに超える顧客が使うようになった場合、処理している製品の 1 日あたりのトランザクションが増えた場合、初期仕様の 1 週間分ではなく 6 か月分のデータを保存しなければならなくなった場合などに、設計がどこまで耐えられるかを調べておくということです。指標はまず個別に負担を重くしていき、次に組み合わせテストも行って、初期設計からは見えない限界を引き出すのです。</p>
<p>　主要な指標に対して耐久テストを行うと、アーキテクトは、次のような形でソリューションをチェックすることができます。</p>
<ul>
<li>予定しているインフラが数値の上昇に対応できるかどうか、限界がどこにあるかがわかる。インフラが壊れるようなものなら、これでシステムの弱点がはっきりしますのでそれをアプリケーションのオーナーに強調することができます。あるいは、予定しているインフラを買うときに、アップグレードの道筋を考えに入れておくことができます。</li>
<li>予定したスループットで処理をしたとき、日中に十分余裕を残して処理が終わり、「繁忙期」や復旧後の「追い上げ」にも対応できるかどうかを確かめられる。その日のうちに処理を終わらせることができず、通常よりも余裕のある週末が頼りになるようなシステムは、長持ちしません。</li>
<li>システムがスケールアップしても、選択したデータアクセスの方法が有効かどうかを確かめられる。1 週間分のデータでは動作するシステムでも、6 か月分のデータでは使い物にならない場合があります。</li>
<li>ハードウェアの追加投資（必要な場合）の前後でアプリケーションの負荷拡大のペースがどのように変わるか、負荷の拡大とともにハードウェアをどのように増強していくべきかを確認できる。アプリケーションをデプロイする前に将来の変化を確認しておくと、格納されるデータやその構造に影響が及ぶ場合があります。</li>
<li>データ量が増えたり、追加されたインフラの間でデータが分割されても、アプリケーションを復旧できるかどうかを確かめられる。</li>
</ul>
<p>　このようなテストをすると、再設計を必要とするような問題のある要素が見つかる場合があります。設計がまだ流動的で、技術的な選択が確定されておらず、ビジネスデータがまだレポジトリに格納されていない間なら、再設計にかかるコストは安くて済みます。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>

<div>
    <a class="sns-button" href="https://twitter.com/share?url=https://yoshi389111.github.io/kinokobooks/soft_ja/soft074.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/twitter.svg"></a>
    <a class="sns-button" href="https://www.facebook.com/share.php?u=https://yoshi389111.github.io/kinokobooks/soft_ja/soft074.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/facebook.svg"></a>
    <a class="sns-button" href="https://b.hatena.ne.jp/add?mode=confirm&url=https://yoshi389111.github.io/kinokobooks/soft_ja/soft074.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/hatebu.svg"></a>
    <a class="sns-button" href="https://getpocket.com/edit?url=https://yoshi389111.github.io/kinokobooks/soft_ja/soft074.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/pocket.svg"></a>
</div>

<nav>
<ul class="nav-links">
<li class="prev-article"><a href="soft073.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">一覧</a></li>
<li class="next-article"><a href="soft075.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
