<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【96】エンドユーザーの立場からはインターフェイスこそがシステム - プログラマが知るべき 97 のこと</title>
  <meta property="og:title" content="【96】エンドユーザーの立場からはインターフェイスこそがシステム">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/soft97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/soft_ja/soft096.htm">
  <meta property="og:site_name" content="プログラマが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e96">【96】エンドユーザーの立場からはインターフェイスこそがシステム</h1>
<div class="author">
ヴィナヤク・ヘッジ
</div>
<p>　ユーザー・インターフェイスのまずさのために埋もれている優れた製品はたくさんあります。エンドユーザーは、ユーザー・インターフェイスを介してシステムにアクセスします。プロダクトとやり取りするときのユーザーエクスペリエンスがまずければ、プロダクトが技術的には先進的で革新的であっても、プロダクトに対する印象は悪くなるでしょう。</p>
<p>　ユーザー・インターフェイスは、アーキテクチャーの重要な構成要素ですが、おろそかになっていることも多いようです。アーキテクトは、ユーザー・エクスペリエンス・デザイナーとかユーザビリティーのエキスパートなどのスペシャリストをチームに入れるべきです。ユーザー・インタラクションの専門家とアーキテクトが協力すれば、インターフェイスの設計とともに内部メカニズムとの結合も進めていけます。プロジェクトの初期段階から最後に至るまで、ユーザー・インターフェイスの専門家に開発に関与してもらえば、完成したプロダクトは磨かれたものになり、ユーザー・インターフェイスとプロダクトの統合はスムースなものになるでしょう。アーキテクトは、ベータテストの段階で実際のエンドユーザーを使って、ユーザー・インタラクション・テストを実施し、そのフィードバックを最終的なプロダクトに組み込むことも検討すべきです。</p>
<p>　時間とともに技術が変わり、機能が追加されると、プロダクトの使い方は変わってきます。アーキテクトは、アーキテクチャーにユーザーの期待を反映させるのと同時に、ユーザーインターフェイスも変えていかなければなりません。</p>
<p>　ユーザー・インタラクションは、プロダクトのアーキテクチャーを完成させるための目標の 1 つでなければなりません。というよりも、ユーザー・インタラクションは、アーキテクチャーのトレードオフやプロダクトのドキュメントの中で、堅牢性やパフォーマンスとともに必要不可欠な構成要素として扱わなければなりません。ユーザー・インタラクション設計の変更は、コードと同様に、時間を追って記録すべきです。特に、プロダクトのその他の部分とは別のプログラミング言語を使ってユーザー・インターフェイスを書いている製品では、この記録が大切です。</p>
<p>　もっともよく使われるインタラクションを使いやすくするだけでなく、エンドユーザーにとって価値のあるものにすることは、アーキテクチャーの重要な仕事です。ユーザー・インターフェイスがよければ、エンドユーザーは気持ちよく操作でき、生産性を上げることができます。あなたのプロダクトがユーザーの生産性を上げるなら、会社の収支にも貢献できるということです。</p>
</article>
<footer>
<p class="license">This work is licensed under a <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">Creative Commons Attribution 3</a></p>
</footer>
</body>
</html>
