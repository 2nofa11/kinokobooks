<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【80】クレバーになるな - ソフトウェアアーキテクトが知るべき 97 のこと</title>
  <meta property="og:title" content="【80】クレバーになるな">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/soft97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/soft_ja/soft080.htm">
  <meta property="og:site_name" content="ソフトウェアアーキテクトが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e80">【80】クレバーになるな</h1>
<div class="author">
イーベン・ヒューイット
</div>
<p>　頭のよさ、機転、思慮深さ、知識の幅と深さ、几帳面さなどは、人として優れた性質だとされるものですが、特にアーキテクトの場合は、これらの性質が求められます。</p>
<p>　しかし、クレバー（巧妙、小器用）だという評価には、ただ褒めているというのとちょっと違うニュアンスがあります。素早くソリューションを考えついてその場をしのげるものの、結局は子どもだましのような詐欺のようなものに落ち着いてしまう、という感じがあります。高校の頃にも、意味をゆがめたり論点をずらしたりしてうまく立ち回る同級生がいたと思いますが、クレバーというのはそんな感じです。</p>
<p>　クレバーなソフトウェアは、高くつきメンテナンスしにくく、もろいものです。クレバーになってはいけません。できる限り愚直になり、しかも適切な設計を作ることです。適切な設計にはクレバーという印象は生まれません。クレバーな部分がどうしても必要に思えるのなら、問題の立て方が間違っています。愚直に取り組めるようになるまで、問題を立て直しましょう。チョークでラフに書いたスケッチを使い、一般性を保つことです。思いつきの特殊性は消し去りましょう。賢いアーキテクトになるためには愚直でなければなりません。</p>
<p>　ソフトウェアにトリックをかけて動くようにするのは、クレバーな技によるものです。細々とした専門的なことによってソフトウェアを動かす弁護士のようなアーキテクトになってはなりません。私たちは、ピタゴラスイッチを発案したループ・ゴールドバーグではないのです。私たちは、冒険野郎マクガイバーでもないので、ペーパークリップとクラッカーとガムから何か複雑な仕掛けを作ったりすることもできません。頭を空っぽにして、クロージャやジェネリックプログラミングの知識を使わずに問題にアプローチしましょう。もちろん、そのような道具が必要になる場合もありますが、普通に思うほどそのような場面が頻繁にあるわけではありません。</p>
<p>　ソリューションが愚直なものであれば、それを実装、メンテナンスできるデベロッパーも増えます。愚直なソリューションのコンポーネントは、たった 1 つのことしかできません。そのようなコンポーネントは、作るために必要な時間も後で書き換えるために必要な時間もごくわずかです。また、使っている素材の最適性をそのまま引き継ぎます。それらは生きたプロセスから生まれ、エレガントで単純なものになります。クレバーな設計は、ごつごつの根っこが張っていて、細部がでしゃばりすぎています。そのような設計は、触れたらぼろぼろに崩れてしまうでしょう。</p>
</article>
<footer>
<p class="license">This work is licensed under a <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">Creative Commons Attribution 3</a></p>
</footer>
</body>
</html>
