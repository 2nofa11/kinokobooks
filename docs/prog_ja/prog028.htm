<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【28】「魔法」に頼りすぎてはいけない - プログラマが知るべき 97 のこと</title>
  <meta property="og:title" content="【28】「魔法」に頼りすぎてはいけない">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/prog97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/prog_ja/prog028.htm">
  <meta property="og:site_name" content="プログラマが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e28">【28】「魔法」に頼りすぎてはいけない</h1>
<div class="author">
アラン・グリフィス（Alan Griffiths）
</div>
<p>　他人のする仕事というのは、どういうものであれ、遠くから見ているとどうしても実際より簡単に思えてしまうものです。自身が開発を経験していないマネージャは、プログラマの仕事を簡単だと思ってしまいますし、逆にマネージメントの経験のないプログラマは、マネージャの仕事を簡単だと思い込んでしまいがちです。</p>
<p>　厄介なのは、今は「プログラマ」でなくても、以前プログラミングをしたことがある人は意外にいるということです。しかし、「ちょっとやったことがある」という程度だと、プログラミング作業の中でも特に難しい部分——つまり自分の頭を使って考える部分——についてはよくわからないものです。少なくともそれをあまり重要とは思わないでしょう。これは、過去何十年もの間、「知識と経験を持った人でないとわからない部分」をプログラミングから排除する努力が続けられてきたおかげでもあります。最も早い時期からその努力をし、特によく知られている人物が Grace Hopper です。Hopper は、まるで暗号のようだったプログラミング言語を、よりわかりやすいものにすべく力を尽くしました。それができれば、専門のプログラマが不要になるのでは、という予測もありました。努力の結果生まれたのがプログラミング言語、“COBOL”ですが、COBOL の誕生により、専門家は不要になるどころか、その後数十年にわたり、プログラミングによって収入を得る専門のプログラマが多数生まれることになります。</p>
<p>　ソフトウェア開発がこのまま簡単になっていけば、いずれはプログラミングの作業はまったく不要になる、という見方はずっと以前からあり、現在もなくなっていません。この見方は、プログラミングをよく知っている人間から見ると、「あまりに無邪気」としか言いようがないものです。しかし、ついこういう見方をしてしまうのが人間である、ということも同時に言えます。そしてプログラマもやはり人間なので、同じようなことをする時はあるのです。</p>
<p>　プロジェクトには必ず、プログラマが積極的に関わるわけではない作業も多数発生します。たとえば、ユーザの要件を確認することや、予算申請、ビルドサーバのセットアップ、QA 環境や本番環境へのアプリケーションのデプロイなどもそうです。業務プロセスやプログラムを古いものから新しいものへ移行することなどもそうでしょう。</p>
<p>　自分が積極的に関わらない仕事に関しては、無意識のうちに簡単だと思ってしまうし、まるで「魔法」のように自動的にできるような錯覚に陥ってしまうのが人間の常です。すべて順調な時は、確かに魔法だと思っていてもさほど支障はありません。問題は「魔法が解けた」時です。魔法が解けてしまえば、途端にプロジェクトは頓挫し、混乱してしまいます。</p>
<p>　たとえば、私の関わったプロジェクトでは、常に正しいバージョンの DLL がロードされていなければシステムがまったく動かないのに、誰もそのことを理解していなかったということがありました。問題が頻繁に起こり始めてから見当違いの調査を繰り返し、誤ったバージョンの DLL がロードされているせいで動かないということに気づくまでに何週間もの時間が無駄になりました。</p>
<p>　対照的に、何もかもが常に順調に進む部署がありました。納期には絶対に遅れず、深夜までデバッグに追われるということも、顧客から緊急でバグ修正を求められるということもありませんでした。あまりにスムーズなので、会社の上層部は、物事がまるで自動的に回っているかのように思い込んでしまいました。そして「プロジェクトマネージャなど不要なのでは？」と考えるようになったのです。プロシェクトマネージャがいなくなった後、その部署の仕事ぶりは他と何ら変わらないものになってしまいました。納期には遅れ、バグは大量で、リリース後も絶えずパッチをあてているという有様になってしまいました。</p>
<p>　もちろん、プロジェクトに関わるすべての人の仕事を詳しく知る必要はありません。しかし、たとえその一部でも、知ろうとして損はないのではないかと思います。そして、自分の知らない仕事、自分の直接関わっていない仕事をしている人を尊重するということが大事です。</p>
<p>　忘れてはならないのは、「魔法が解けてしまった時は、誰かがかけなおさなくてはならない」ということです。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>
</footer>
</body>
</html>
