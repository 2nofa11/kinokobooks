<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【58】テスト担当者はプログラマの友人 - プログラマが知るべき 97 のこと</title>
  <meta property="og:title" content="【58】テスト担当者はプログラマの友人 | プログラマが知るべき 97 のこと">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/prog97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/prog_ja/prog058.htm">
  <meta property="og:site_name" content="プログラマが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <script type="text/javascript" src="../js/darkmode.js"></script>
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e58">【58】テスト担当者はプログラマの友人</h1>
<div class="author">
バーク・ハフネーゲル（Burk Hufnagel）
</div>
<p>　会社によって <strong>QA（Quality Assurance：品質保証）</strong>と呼ばれたり <strong>QC（Quality Control：品質管理）</strong>と呼ばれたりしますが、いずれにしろその仕事を担当している人たちのことを、プログラマの多くは「悩みの種」だと思っています。私の直接知っている範囲でも、テスト担当者たちと敵対的な関係に陥っているプログラマは多くいます。「小うるさい」「完璧主義すぎる」という愚痴もよく聞きます。読者の中にも同じような人は多いのではないでしょうか。</p>
<p>　私自身は、彼らに対してまったく違った印象を持っています。そうなった原因はおそらく、最初に勤めた会社でテストを担当していた人にあると思います。その会社でテストを担当していたのは何と総務部長でした。マーガレットという名前の女性で、とても感じの良い人でした。いつも業務がスムーズに進むよう、細かいところにまで気を配ってくれ、私も含めた若いプログラマたちの教育も買って出ていました。プロとして顧客の前ではどう振る舞うべきなのかを教えていたのです。そして、彼女はバグを見つける才能にも恵まれていました。どれほど目立たないバグだろうとすぐに見つけてしまうのです。</p>
<p>　当時私が担当していたプログラムは、元々は経理担当の人間が書いたものでした。書いた本人は、自分の腕はプロ並みだと思っていたようですが、実際はやはりプロではないため、プログラムは重大なバグをいくつか抱えていました。その修正が私の仕事だったのです。修正ができるとマーガレットがテストをします。私としては完全に直したつもりだったのですが、彼女が使い始めると、ほんの少しキーを叩くだけで、すぐに妙な動きをするのです。新たなバグが見つかったというわけです。もちろんそのときは、いらだたしい思いや恥ずかしい思いをすることもありましたが、ともかく彼女が感じの良い人だったので、恨む気持ちはまったくありませんでした。テスト、デバッグを繰り返すうち、ついにその日が来ました。マーガレットが使っても、プログラムは何の問題もなく起動され、請求書の作成からプリントアウト、終了までまったく滞りなく進んだのです。実に嬉しい瞬間でした。さらに素晴らしかったのは、顧客のコンピュータにプログラムがインストールされてからです。プログラムには何の問題も起きず、ずっと順調に動き続けました。リリース前にあらゆるバグをマーガレットが見つけてくれたからでしょう。</p>
<p>　テスト担当者たちは、プログラマの敵ではなく「友人」であると私は言いたいです。彼らは、取るに足りないと思えるような問題を逐一指摘してくるかもしれません。それで「恥をかかされた」と思う人もいるでしょう。しかし、些細に思える問題でも解決しておけば、顧客はその問題に煩わされずに済みます。そうすれば、あなたは恥をかくどころか、顧客から高く評価されるでしょう。素晴らしいことではないでしょうか。それはテスト担当者が問題を見つけてくれたからこそ、できたことなのです。私の言う意味はもうおわかりでしょう。</p>
<p>　想像してみてください。たとえば今、とても革新的な人工知能アルゴリズムを利用したソフトウェアが納入され、はじめて使ってみているところだとします。人工知能が、並行処理に関する問題を自動的に発見し修正してくれるという触れ込みです。起動してみたら、最初の方に表示される画面で “intelligence” のスペルが間違っているのに気づきました。何となく嫌な予感がしますが、単なるタイプミスです。大した問題ではありません。さらに操作すると、環境設定の画面で、ラジオボタンであるべきところにチェックボックスが使われているのが見つかりました。それからキーボードショートカットがいくつか機能しないのにも気づきました。どれも大問題というわけではないのですが、数が多くなると、作ったプログラマに対する信頼感は揺らいでくるはずです。こんな簡単な問題の修正もちゃんとできない人たちが作った人工知能、本当に大丈夫だろうか。並行処理の問題はずっと難しいのに、それを発見して修正するなどという芸当が果たしてできるのだろうか。そう思っても不思議はありません。</p>
<p>　もちろん、プログラマたちが大変な天才で、AI を素晴らしいものに仕上げるのに熱中するあまり、些細な問題にはまったく気づかないということはあり得ます。それでも、他の人間にテストをさせれば、些細な問題は見つかり、顧客の目に触れるようなことはなかったはずです。それができないというのは、プログラマとしての資質を疑われても仕方ないでしょう。</p>
<p>　だから、些細な問題を社内で見つけてくれ、顧客の目に触れないようにしてくれるテスト担当者は、プロクラマにとって「友人」と言えるのです。なかなか納得はできないかもしれませんが、それは本当です。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>
<nav>
<ul class="nav-links">
<li class="prev-article"><a href="prog057.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">一覧</a></li>
<li class="next-article"><a href="prog059.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
