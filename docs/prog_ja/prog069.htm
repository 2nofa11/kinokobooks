<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【69】車輪の再発明の効用 - プログラマが知るべき 97 のこと</title>
  <meta property="og:title" content="【69】車輪の再発明の効用">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/prog97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/prog_ja/prog069.htm">
  <meta property="og:site_name" content="プログラマが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e69">【69】車輪の再発明の効用</h1>
<div class="author">
ジェイソン・P・セージ（Jason P. Sage）
</div>
<blockquote>
<p>「前に作られたものがあるのなら、それを使えばいいじゃないか。車輪を再発明するなんてバカげてる……」</p>
</blockquote>
<p>　この言葉、人によって言い方は少しずつ違うでしょうが、聞いたことのある人は多いのではないでしょうか。仕事の現場でも、大学などでも頻繁に言われることだからです。しかしなぜでしょうか。「車輪の再発明」はどうしてそんなに忌み嫌われるのでしょうか。それはまず、新たにコードを書くより、既存のコードを流用する方が安全でコストが少なくて済むからです。既存のコードは、その多くが「正しく動作すると既に確認されたコード」です。厳しいテストによって品質を高められ、製品としても役立ってきた実績のあるコードが多いのです。既存の製品やコードベースに時間と労力を投資したのに、同様のものを再度作ってまた時間と労力を投資するのは無駄、という考えもあります。あえて車輪の再発明をするのだとしたら、それなりの理由は必要でしょう。</p>
<p>　世の中には、ソフトウェア開発のパターンや、設計について書かれた本がたくさん出回っています。読者の中にも読んだことのある人は多いでしょう。ただ、そういう本は、いくら素晴らしいことが書かれていても、だいたいは読むと眠くなります。ヨットの出てくる映画を見るのと、実際に自分でヨットに乗るのとではまったく違います。それと同様、すでに存在するコードを流用するのと、自分でゼロからソフトウェアをデザインし、テストし、バグ修正をして品質を高めていくのとでは、まるで違うのです。</p>
<p>　「車輪の再発明」をしようと思えば、ただ単に目的に合う部品を探してきて、適切な場所にはめ込むだけでは済まなくなります。部品から自分の手で作ろうとすれば、その部品に中でどういう処理をさせる必要があるのか、また他の部分はどういう処理をしているのか、嫌でも詳しく知ることになります。メモリ管理、たとえば仮想ページングなどはどうなっているでしょうか。果たして自分の手でそれを実装できるでしょうか。双方向リスト、動的配列クラス、ODBC クライアント、自分が普段使っているような GUI のコードなどを自分で書けるでしょうか。Web ブラウザウィジェットを自ら作れるでしょうか。多重化システムをマルチスレッドシステムのかわりに書くことや、ファイルベースのデータベースとメモリベースのデータベースのどちらを使うか、自分で判断することなどはできるでしょうか。</p>
<p>　こういうソフトウェアの核になる部分を自ら実装する機会を持てるプログラマはごくわずかです。このため普通の開発者は、これらの部分が現実にどのように機能しているのかを詳しく知ることができません。どう動いているか自分ではわからないために、神秘的なもの、「ブラックボックス」のようなものとみなし、機能した結果を利用するしかなくなっているのです。水面だけを見ていたのでは、その下にどんな危険が潜んでいるかわかりません。また、底の方で何が起きているのかがわからなければ、せっかく優れた能力があっても、できることは限られてしまいます。</p>
<p>　車輪の再発明をしようとした結果、失敗をすることもあるでしょう。しかし、それは一度で車輪の再実装がうまくいくよりも貴重な体験になるはずです。自分の手でゼロからコードを書き、あれこれと試行錯誤をすることを通して学ぶのは、ただ技術書を読んで学ぶこととは大きく違います。試行錯誤をしている間は、悔しがったり喜んだり、感情が大きく動くことになるからです。</p>
<p>　本を読むなどして知識を頭に入れることも大切です。しかし優れたプログラマになるためには、経験を積むことがどうしても必要です。現場で多くを見て、自分の手で何かを作ることが必要なのです。車輪の再発明は、プログラマが学び、技術を高める上で非常に重要なことです。ボディビルダーがバーベルを上げるのと同じようなもの、と言ってもいいでしょう。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>
<nav>
<ul class="nav-links">
<li class="prev-article"><a href="prog068.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">インデックス</a></li>
<li class="next-article"><a href="prog070.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
