<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【10】ツールの選択は慎重に - プログラマが知るべき 97 のこと</title>
  <meta property="og:title" content="【10】ツールの選択は慎重に | プログラマが知るべき 97 のこと">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/prog97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/prog_ja/prog010.htm">
  <meta property="og:site_name" content="プログラマが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <script type="text/javascript" src="../js/darkmode.js"></script>
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e10">【10】ツールの選択は慎重に<span id="color-scheme"></span></h1>
<div class="author">
ジョヴァンニ・アスプローニ（Giovanni Asproni）
</div>
<p>　昨今では、アプリケーションをまったくのゼロから開発することは稀です。通常は、既存のツール——コンポーネント、ライブラリ、フレームワークなど——を組み合わせて作ります。それは次のような理由からです。</p>
<ul>
<li>アプリケーションの規模は以前に比べて大きくなり、複雑で高度になってきている。対照的に、開発にかけられる時間は短くなる一方である。プログラマの時間と能力は、最大限有効に活かす必要がある。つまり、インフラのコードよりも、ビジネスドメインのコードに、時間と能力をできる限り振り向けるべきである。</li>
<li>広く使用されているコンポーネントやフレームワークの方が、自前で開発しているものに比べ、バグが少ない傾向にある。</li>
<li>多くの高品質のソフトウェアを Web から無料で入手できるようになった。これは、開発コスト削減につながるだけでなく、然るべき知識と技術を備えた技術者と出会う機会を増加させた。</li>
<li>ソフトウェアの開発や保守は多くの人手を要し、人件費の掛かる仕事である。一般的に言って、新しいものをゼロから作るよりは、すでに存在するものを買ったほうが安く上がる。</li>
</ul>
<p>　ただ、既存のツールを適切に組み合わせることは、実は容易なことではありません。事前に十分な検討が必要でしょう。その際には、以下のようなことに留意すべきです。</p>
<ul>
<li>コンテキストに関する前提条件はツールごとに違っている——たとえば、どういうインフラ、制御モデル、データモデル、通信プロトコルなどを前提とするかが、ツールごとに違う。注意しないと、アプリケーションと前提条件が一致しないツールを使ってしまう。そのような不一致があると、対処策、回避策を数多く講じる必要が生じ、コードが必要以上に複雑になってしまう。</li>
<li>ツールによってそのライフサイクルは異なる。利用しているツールを 1 つだけアップグレードするというのは、極めて困難で長い時間を要する。機能の追加、設計の変更、あるいはバグ修正などによって、他のツールとの齟齬が生じるおそれがある。利用するツールの数が多くなればなるほど、この問題は深刻になる。</li>
<li>ツールによっては、複雑な設定作業が必要になる場合がある。いくつもの XML ファイルを使用した設定が必要なツールも多い。そういうツールは、十分に注意をしなければすぐに制御不能に陥る危険性がある。多数の XML ファイルで設定を行うツールばかりを組み合わせてアプリケーションを作ると、結果的に大部分が XML で構成されていて、プログラミング言語で書いたわずかな量のコードを加えただけ、というようなアプリケーションができあがってしまうこともある。設定作業は極めて煩雑になってしまい、アプリケーションの保守や拡張も困難になる。</li>
<li>特定のベンダのツールに過度に依存すると、いわゆる「ベンダロックイン」に陥ってしまう。そうなると、保守性、パフォーマンス、拡張性、価格などに制約が生じてしまう。ベンダの動向にどうしても影響されるからだ。</li>
<li>フリーソフトウェアを利用するからといって、全てが無料になるわけではない。商用サポートを受ける場合には、フリーソフトウェアだからといって、サポート費用が安いとは限らない。</li>
<li>ライセンスに関する条件の確認も重要で、それはフリーソフトウェアを利用する場合でもあてはまる。企業によっては、GPL ソフトウェアの利用が認められないこともある。GPL ソフトウェアの派生物は必ずソースコードとともに配布しなければならないという（ウイルスにたとえられる）条項が忌避される。</li>
</ul>
<p>　ここまで挙げてきたような問題の発生を防ぐために、私は「まずは最低限のツールだけを導入する」という戦略を採っています。よく検討して、どうしても必要と判断したものだけに絞り込んで導入するのです。通常、初期の段階で重視するのは、「インフラ関連の低水準プログラミングの手間を省き、問題の発生を防ぐ」ということです。たとえば分散アプリケーションを開発するなら直接ソケットを扱うのではなくミドルウェアを利用する、ということです。その後も必要になったタイミングで新たなツールを追加していきます。新たにツールを追加する際には、ツールをビジネスドメインオブジェクトから隔離するためのインターフェースやレイヤを導入すれば、ツールの変更が必要になった時の手間が最小限に抑えられるでしょう。最後に、ここまで話してきたアプローチには良い副作用があります。当初の予測よりも導入するツールが少なくて済み、アプリケーションも肥大せずに済むのです。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>

<div>
    <a class="sns-button" href="https://twitter.com/share?url=https://yoshi389111.github.io/kinokobooks/prog_ja/prog010.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/twitter.svg"></a>
    <a class="sns-button" href="https://www.facebook.com/share.php?u=https://yoshi389111.github.io/kinokobooks/prog_ja/prog010.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/facebook.svg"></a>
    <a class="sns-button" href="https://b.hatena.ne.jp/add?mode=confirm&url=https://yoshi389111.github.io/kinokobooks/prog_ja/prog010.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/hatebu.svg"></a>
    <a class="sns-button" href="https://getpocket.com/edit?url=https://yoshi389111.github.io/kinokobooks/prog_ja/prog010.htm" rel="nofollow" target="_blank"><img class="sns-logo" src="../images/pocket.svg"></a>
</div>

<nav>
<ul class="nav-links">
<li class="prev-article"><a href="prog009.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">一覧</a></li>
<li class="next-article"><a href="prog011.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
