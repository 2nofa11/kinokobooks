<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【66】いったんコンピュータから離れてみる - プログラマが知るべき 97 のこと</title>
  <meta property="og:title" content="【66】いったんコンピュータから離れてみる">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/prog97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/prog_ja/prog066.htm">
  <meta property="og:site_name" content="プログラマが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <script type="text/javascript" src="../js/darkmode.js"></script>
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
  <style type="text/css">
a.sourceLine { display: inline-block; line-height: 1.25; }
a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }
a.sourceLine:empty { height: 1.2em; }
.sourceCode { overflow: visible; }
code.sourceCode { white-space: pre; position: relative; }
div.sourceCode { margin: 1em 0; }
pre.sourceCode { margin: 0; }
@media screen {
div.sourceCode { overflow: auto; }
}
@media print {
code.sourceCode { white-space: pre-wrap; }
a.sourceLine { text-indent: -1em; padding-left: 1em; }
}
pre.numberSource a.sourceLine
  { position: relative; left: -4em; }
pre.numberSource a.sourceLine::before
  { content: attr(title);
    position: relative; left: -1em; text-align: right; vertical-align: baseline;
    border: none; pointer-events: all; display: inline-block;
    -webkit-touch-callout: none; -webkit-user-select: none;
    -khtml-user-select: none; -moz-user-select: none;
    -ms-user-select: none; user-select: none;
    padding: 0 4px; width: 4em;
    color: #aaaaaa;
  }
pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
div.sourceCode
  {  }
@media screen {
a.sourceLine::before { text-decoration: underline; }
}
code span.al { color: #ff0000; font-weight: bold; } /* Alert */
code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
code span.at { color: #7d9029; } /* Attribute */
code span.bn { color: #40a070; } /* BaseN */
code span.bu { } /* BuiltIn */
code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
code span.ch { color: #4070a0; } /* Char */
code span.cn { color: #880000; } /* Constant */
code span.co { color: #60a0b0; font-style: italic; } /* Comment */
code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
code span.do { color: #ba2121; font-style: italic; } /* Documentation */
code span.dt { color: #902000; } /* DataType */
code span.dv { color: #40a070; } /* DecVal */
code span.er { color: #ff0000; font-weight: bold; } /* Error */
code span.ex { } /* Extension */
code span.fl { color: #40a070; } /* Float */
code span.fu { color: #06287e; } /* Function */
code span.im { } /* Import */
code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
code span.kw { color: #007020; font-weight: bold; } /* Keyword */
code span.op { color: #666666; } /* Operator */
code span.ot { color: #007020; } /* Other */
code span.pp { color: #bc7a00; } /* Preprocessor */
code span.sc { color: #4070a0; } /* SpecialChar */
code span.ss { color: #bb6688; } /* SpecialString */
code span.st { color: #4070a0; } /* String */
code span.va { color: #19177c; } /* Variable */
code span.vs { color: #4070a0; } /* VerbatimString */
code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
  </style>
</head>
<body>
<article>
<h1 id="e66">【66】いったんコンピュータから離れてみる</h1>
<div class="author">
バーク・ハフネーゲル（Burk Hufnagel）
</div>
<p>　何時間も集中して考えているのに、問題があまりに難しく、なかなか解決策が思いつかない。仕方がないので、散歩に出てみたり、自動販売機まで何かを買いに行ったりしたら、帰りに突然答えがわかった。そういう経験をしたことのある人は案外多いのではないでしょうか。</p>
<p>　どうしてこんなことが起きるのでしょうか。コーディング中は脳の論理を司る部分だけがはたらいていて、創造を司る部分がはたらいていないためではないかと私は考えています。発想の飛躍が求められるような場面では、論理を司る部分が休まない限り、解決策が見つからないということなのかもしれません。</p>
<p>　実例を挙げましょう。私は以前、レガシーコードの改修中に面白いメソッドを見つけました。それは、文字列の中に“hh:mm:ss xx”という形式の適切な時刻情報が含まれているか検証するメソッドでした。hh には時間、mm には分、ss には秒、xx には AM あるいは PM が入ります。</p>
<p>　そのメソッドでは、次のようなコードで、（時間を表す）2 文字を数値に変換し、値が適切な範囲内にあるか検証していました。</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><a class="sourceLine" id="cb1-1" title="1"><span class="kw">try</span> {</a>
<a class="sourceLine" id="cb1-2" title="2">    <span class="bu">Integer</span>.<span class="fu">parseInt</span>(time.<span class="fu">substring</span>(<span class="dv">0</span>, <span class="dv">2</span>));</a>
<a class="sourceLine" id="cb1-3" title="3">} <span class="kw">catch</span> (<span class="bu">Exception</span> x) {</a>
<a class="sourceLine" id="cb1-4" title="4">    <span class="kw">return</span> <span class="kw">false</span>;</a>
<a class="sourceLine" id="cb1-5" title="5">}</a>
<a class="sourceLine" id="cb1-6" title="6"><span class="kw">if</span> (<span class="bu">Integer</span>.<span class="fu">parseInt</span>(time.<span class="fu">substring</span>(<span class="dv">0</span>, <span class="dv">2</span>)) &gt; <span class="dv">12</span>) {</a>
<a class="sourceLine" id="cb1-7" title="7">    <span class="kw">return</span> <span class="kw">false</span>;</a>
<a class="sourceLine" id="cb1-8" title="8">}</a></code></pre></div>
<p>　その後には、分と秒の情報を検証するための同様のコードがありました。もちろん、文字列オフセットと、数値の上限値は上のコードとは違います。メソッドの最後は、AM と PM の情報を検証する次のようなコードでした。</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><a class="sourceLine" id="cb2-1" title="1"><span class="kw">if</span> (!time.<span class="fu">substring</span>(<span class="dv">9</span>, <span class="dv">11</span>).<span class="fu">equals</span>(<span class="st">&quot;AM&quot;</span>) &amp;</a>
<a class="sourceLine" id="cb2-2" title="2">    !time.<span class="fu">substring</span>(<span class="dv">9</span>, <span class="dv">11</span>).<span class="fu">equals</span>(<span class="st">&quot;PM&quot;</span>)) {</a>
<a class="sourceLine" id="cb2-3" title="3">    <span class="kw">return</span> <span class="kw">false</span>;</a>
<a class="sourceLine" id="cb2-4" title="4">}</a></code></pre></div>
<p>　検証により、いずれかの情報が適切でなければ <code>false</code> が返され、すべて適切であれば <code>true</code> が返されます。</p>
<p>　冗長でわかりにくいコードだと思った人も多いと思います。確かにそのとおりです。私もそう思ったので、改修することにしました。メソッドをリファクタリングし、ユニットテストをいくつか書いて、正しく機能することを確認しました。</p>
<p>　改修結果にはとても満足していました。改修後のバージョンは読みやすいだけでなく、サイズも半分になり、加えてより確実な検証ができるようになったからです。元のコードのように、時間、分、秒が上限を超えていないかを確認するだけでなく、より厳密に確認するようにしたのです。</p>
<p>　しかし翌朝、仕事を始める前に 1 つひらめいたのです。「どうして正規表現を使って文字列を検証するコードにしなかったのだろう」。わずか数分間の作業で、コードは次のようにたった 1 行になりました。</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode java"><code class="sourceCode java"><a class="sourceLine" id="cb3-1" title="1"><span class="kw">public</span> <span class="dt">static</span> <span class="dt">boolean</span> <span class="fu">validateTime</span>(<span class="bu">String</span> time) {</a>
<a class="sourceLine" id="cb3-2" title="2">    <span class="kw">return</span> time.<span class="fu">matches</span>(<span class="st">&quot;(0[1-9]|1[0-2]):[0-5][0-9]:[0-5][0-9] ([AP]M)&quot;</span>);</a>
<a class="sourceLine" id="cb3-3" title="3">}</a></code></pre></div>
<p>　ここで重要なのは、30 行以上あったコードが最終的にたった 1 行になったということではありません。コンピュータに向かい合っているうちは「もうこれ以上のものはできない」と思っていた、ということです。</p>
<p>　ここまで書いてきたような問題解決方法もあるのです。ある問題について十分に考えたら、あとは音楽を聴くなり、散歩をするなりして、脳の創造を司る部分をはたらかせてみてください。じっとコンピュータの前に座って考え込んでいるより、その方が良いアイデアを思いつくものです。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>
<nav>
<ul class="nav-links">
<li class="prev-article"><a href="prog065.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">一覧</a></li>
<li class="next-article"><a href="prog067.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
