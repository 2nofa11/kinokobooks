<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【51】プロジェクト自身にしゃべらせる - プログラマが知るべき 97 のこと</title>
  <meta property="og:title" content="【51】プロジェクト自身にしゃべらせる">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/prog97_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/prog_ja/prog051.htm">
  <meta property="og:site_name" content="プログラマが知るべき 97 のこと">
  <meta property="og:locale" content="ja_JP">
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="e51">【51】プロジェクト自身にしゃべらせる</h1>
<div class="author">
ダニエル・リンドナー（Daniel Lindner）
</div>
<p>　現在のソフトウェア開発プロジェクトの多くには、バージョン管理システムが導入されています。そしてバージョン管理システムの多くは、自動テストでコードの妥当性を定期的に確認する CI（Continuous Integration：継続的結合）サーバに接続されています。素晴らしいことです。</p>
<p>　CI サーバに静的コード解析のツールを組み込み、コードメトリクスを収集することもできます。コードメトリクスは、コードの特定の側面におけるフィードバックデータであり、時間の経過に伴うコードの変化を知る手がかりでもあります。メトリクスを収集する場合は、「これを上回っては（下回っては）ならない」という基準を通常設けることになります。たとえば、コードのテストカバレッジが最初の段階で 20% だったとしましょう。仮に、テストカバレッジが今後も決して 15% を下回ってはならない、という基準を設けたとします。データの収集は CI サーバに任せておけばずっと自動でやってくれますが、そのままでは、基準値を下回っているかどうかは人間が定期的に自分の目で確認する必要があります。下回った時は自動的に通知される、という仕組みはできないでしょうか。</p>
<p>　まず通知の手段が問題です。手段としては、e メールやインスタントメッセージなどが使えるでしょう。たとえば、テストカバレッジが低下した時や改善した時に、それを即座にメールやメッセージで伝えるようにするのです。しかし、それよりもさらに効果的なのは、XFD（eXtreme Feedback Device）です。</p>
<p>　XFD は、定期タスク等の結果に応じ、ランプや小型の噴水、オモチャのロボット、USB ロケットランチャーなどを動かす仕組みです。メトリクスがあらかじめ設定した基準値を上回った（下回った）時に機器を動かし、わかりやすく通知するのです。ランプならば、基準値を上回るか下回るかした場合に、一目でわかるように明るく光るわけです。これならば、帰宅しようと急いでいる時でも、見過ごすことはないでしょう。</p>
<p>　使用する機器を工夫すれば、ビルドが失敗した時には何かが壊れる音が聞こえる、コードに注意すべき問題が発見された時には信号が赤に変わる、異臭が漂う、そんな仕組みにすることもできます。プロジェクトチームのメンバーが複数箇所に点在している時は、同様の仕組みを各所に作ってもいいでしょう。信号機をプロジェクトマネージャのオフィスに設置し、それでプロジェクト全体の状況を伝えれば、喜ばれるかもしれません。</p>
<p>　どのような機器をどう使うかは、利用する人の創造力次第です。いわゆる「ギーク」の多いチームなら、チームのマスコットをラジコンで動かす、というのも面白いでしょう。もう少しシックな方がいい、というのなら、デザイナーランプを使うのもいいと思います。インターネットで色々と検索してみれば、さらにインスピレーションが湧くはずです。とにかく電源プラグのある機器、遠隔制御の可能な機器ならば、XFD に使用できるのです。</p>
<p>　XFD は、プロジェクトの「ご意見番」のような存在と言ってもいいでしょう。メンバーたちの仕事ぶりが定められたルールに照らして褒められるものか、あるいは非難されるべきものかを、XFD が音や光を使って直接教えてくれるわけです。音声合成ソフトウェアとスピーカーを使えば、ご意見番に本当に「しゃべらせる」こともできます。プロジェクト自身が本当に「しゃべりだす」ときが来るのです。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">CC-by-3.0-US</a> でライセンスされています。</p>
<nav>
<ul class="nav-links">
<li class="prev-article"><a href="prog050.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">インデックス</a></li>
<li class="next-article"><a href="prog052.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
