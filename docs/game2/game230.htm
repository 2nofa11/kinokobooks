<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns#" lang="ja" xml:lang="ja" >
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="../css/style_ja.css"/>
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>【30】デザイナーだった私がどうやってスクリプトを組めるようになったか？ - ゲームクリエイターが知るべき 97 のこと 2</title>
  <meta property="og:title" content="【30】デザイナーだった私がどうやってスクリプトを組めるようになったか？">
  <meta property="og:type" content="article">
  <meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/game297_ja.png">
  <meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/game2/game230.htm">
  <meta property="og:site_name" content="ゲームクリエイターが知るべき 97 のこと 2">
  <meta property="og:locale" content="ja_JP">
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
</head>
<body>
<article>
<h1 id="j30">【30】デザイナーだった私がどうやってスクリプトを組めるようになったか？</h1>
<div class="author">
高森 大輔
</div>
<p>　私は他社で 15 年ほどデザイナー職だったのですが、2 年前に株式会社セガへ入社し、テクニカルアーティストへ転向しました。</p>
<p>　デザイナーの多くがプログラムを勉強してもなかなか身につかず、志し半ばで挫折するケースが多いのではないかと思いましたので、私がどのような経緯でスクリプトを組めるようになったのかをご紹介いたします。</p>
<h2 id="きっかけ" class="unnumbered">きっかけ</h2>
<p>　私は今までデザインやデザイン管理、デザインワークフローの構築等に従事していたのですが、あるときテクニカルアーティストの強烈な仕事の成果を目の当たりにしてから、「自分もそうなりたい」と思うようになりました。</p>
<p>　しかし当時の私はプログラムや DCC ツールのスクリプトを組んだ経験はなく、経験も知識もない自分にできるのだろうかと疑問でいっぱいでしたが、「テクニカルアーティスト」が放つ強烈な印象を忘れることができなかったので、ダメ元でやってみようと思い、行動を起こしました。</p>
<h2 id="最初のアプローチと壁-良い感じにならないことへの不満" class="unnumbered">最初のアプローチと壁 ～「良い感じ」にならないことへの不満</h2>
<p>　まず「プログラム作成の基礎が理解できていないとスクリプトは組めない」と考えたので、会社と自宅の PC に Visual C++ をインストールして、休み時間や休日を利用してプログラム例文をひたすら打ち込むことにしました。</p>
<p>　しかし、学んでいくうちにデザインとまったく関係ないように思える内容について「これを覚えると本当にテクニカルデザイナーになれるのだろうか？」……という疑問に襲われました。</p>
<p>　どうしたらデザイナー的感覚での「良い感じ」なプログラムになるのかビジョンがまったく見えなくなり、デザイナーがプログラムを覚えようとすると最初に遭遇する「目的を見いだせない壁」にぶつかったのです。</p>
<p>　その結果、教本を何周かなぞらえた後に勉強を投げ出してしまいました。</p>
<h2 id="ピンチと転機" class="unnumbered">ピンチと転機</h2>
<p>　その後、現在勤めている株式会社セガへ転職し、デザイン業務から離れ、Maya を使った開発現場への技術サポート業務に従事しました。</p>
<p>　入社したての頃は Maya のスクリプトである mel も組めませんでしたが、あるとき mel をスクリプトエディタで開いて中身を眺めていると、部分的に何をやっているかわかることに気がつきました。</p>
<p>　mel が C 言語のルールに似ていたため、以前勉強していたプログラムの基礎学習がここで開花したのです。</p>
<p>　それからほどなくして、ある業務でまだまともに組んだことがない mel を私が書かねばならなくなる個人的なピンチに遭遇しました。</p>
<p>　基礎学習を思い出し、mel リファレンスを調べ、わからないところは弊社の Maya ツールプログラマーに教えを乞い、何とか現場に出せる mel を完成させました。</p>
<p>　これが転機となり、私が組めそうな mel 作成の案件は自分で受けて現場へ提供し、以前よりクオリティの高いサポートを開発現場へ促せるようになりました。</p>
<h2 id="結論" class="unnumbered">結論</h2>
<p>　デザイナーだった私がスクリプトを組めるようになったのは、次の「違い」に気づいたからです。</p>
<p>　まず、モチベーションの発生源の違いです。</p>
<p>　デザインは感覚的な「良い感じ」の追求がモチベーションの発生源になりますが、プログラムは「自分が行いたい、最も効率的、かつ効果的な処理のロジック」を完成させることがその発生源になります。</p>
<p>　次に、デザインとプログラムの作業工程の違いです。</p>
<p>　デザイン作業は完成の指標が「良い感じか否か？」のような曖昧な場合が多く、納得するまで果てなく完成形を模索できるので、作業初期に明確なデザインの完成形を決めづらいのですが、プログラムは作成当初から処理のゴールを明確にしなければならないため、仕様や指標が曖昧だとプログラムを完成させることが極めて困難になります。</p>
<p>　プログラム作業の開始前に明確な処理のゴールを決めることは、プログラマーにとってはすごく当たり前なことですが、感覚作業が主であるデザイナーはこの違いになかなか気づかないのです。</p>
<p>　これらに気がつくことで、初めて「壁」を乗り越えられると思います。</p>
<p>　この経験談を読んだことで 1 人でもスクリプトを組めるデザイナーが増えたら幸いです。</p>
</article>
<footer>
<p class="license">このエッセイは <a href="https://creativecommons.org/licenses/by/3.0/" class="external text" title="https://creativecommons.org/licenses/by/3.0/" rel="nofollow">CC-by-3.0</a> でライセンスされています。</p>
<nav>
<ul class="nav-links">
<li class="prev-article"><a href="game229.htm">&lt; 前のエッセイ</a></li>
<li class="return-index"><a href="index.html">一覧</a></li>
<li class="next-article"><a href="game231.htm">次のエッセイ &gt;</a></li>
</ul>
</nav>
</footer>
</body>
</html>
