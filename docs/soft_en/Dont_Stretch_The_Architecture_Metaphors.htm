<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<link rel="stylesheet" href="../css/style_en.css"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
<title>Don't Stretch The Architecture Metaphors - Software Architect 97Things</title>
<meta property="og:title" content="Don't Stretch The Architecture Metaphors">
<meta property="og:type" content="article">
<meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/soft97_en.png">
<meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/soft_en/Dont_Stretch_The_Architecture_Metaphors.htm">
<meta property="og:site_name" content="97 Things Every Software Architect Should Know.">
<meta property="og:locale" content="en_US">
<script type="text/javascript" src="../js/darkmode.js"></script>
</head>
<body>
<article>
<header>
<h1>Don't Stretch The Architecture Metaphors</h1>
</header>

<p>Architects like to deal with metaphors. They provide nice concrete
handles on subjects that are often abstract, complex and moving
targets. Whether it is communicating with the rest of the team or
talking through the architecture with the end-user it is so tempting to
find something tangible or physical to use as a metaphor for what you
are trying to build.
</p><p>
This usually starts well, in that a common
language can evolve where people start to feel that things are moving
in the right direction. The metaphor develops and grows over time until
it takes on a life of it's own. People feel good about the metaphor -
we're making progress!
What usually happens is that the metaphor
for the architecture now becomes dangerous. Here's how it can turn on
it's Architect creators:
</p>
<ul><li> The business domain customer starts 
to like your metaphor more that your proposed system, in that the
happiest possible interpretation is now taken by all concerned and
where no real constraints are uncovered. 
</li></ul>
<p>
Example: We're building a 'transport system like a ship travelling between a series of docks'.
You think container ships crossing the Pacific. I was actually thinking a rowing boat in a swimming pool, with possibly one oar.
</p>
<ul><li> The
development team starts to think that the metaphor is more important
than the actual business problem. You start to justify odd decisions
because of a fondness for the metaphor.
</li></ul>
<p>
Example: We said
it's like a filing cabinet  so of course we have to show it to the user
alphabetically. I know it's a filing cabinet with six dimensions and of
infinite length and clock built in to it, but we've done the icon now -
so it has to be a filing cabinet...
</p>
<ul><li> The delivered system
contains relics of names from old broken metaphors long gone;
archaeological   testimonials to concepts long refactored and dug over.
</li></ul>
<p>
Example:
Why does the Billing Factory object create a Port channel for the
Rowing boat system? Surely it it should return a Pomegranate view for
the Hub Bus? What do you mean you're new here?
</p><p>
So
remember, don't fall in love with your system metaphor - only use it
for exploratory communication purposes and don't let it turn on you.
</p>

<footer>
<p class="author">by David Ing</p>
<p class="license">This work is licensed under a <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">Creative Commons Attribution 3</a></p>

</footer>
</article>
</body>
</html>

