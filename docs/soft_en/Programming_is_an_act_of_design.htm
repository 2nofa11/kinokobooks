<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<link rel="stylesheet" href="../css/style_en.css"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
<title>Programming is an act of design - Software Architect 97Things</title>
<meta property="og:title" content="Programming is an act of design">
<meta property="og:type" content="article">
<meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/soft97_en.png">
<meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/soft_en/Programming_is_an_act_of_design.htm">
<meta property="og:site_name" content="97 Things Every Software Architect Should Know.">
<meta property="og:locale" content="en_US">
<script type="text/javascript" src="../js/darkmode.js"></script>
</head>
<body>
<article>
<header>
<h1>Programming is an act of design</h1>
</header>

<p>Kristen Nygaard, father of object-oriented programming and the
Simula programming language, used to say: Programming is learning.
Accepting the fact that programming or more precisely software
development is a processes of discovery and learning and not a process
of engineering and construction are fundamental to bring software
practices forward. Applying the concepts of traditional engineering and
construction on software development does not work. The problems have
been documented and commented upon by leading software thinkers for
more than 30 years. As an example, In 1987 Fredric Brooks JR stated in
the "Report of the Defense Science Board Task Force on Military
Software" that the document driven, specify-then-build approach lies at
the heart of so many software problems.
</p><p>So where should the software industry go and look for improving
their practices? What about the industries involved in production of
sophisticated mass-market products such as cars, pharmaceutical drugs
or semiconductors?
</p><p>Lets take a look at the car industry. When planning a new
model, the first thing is to choose a concept or archetype. It's
primarily an architectural positioning mechanism. BMW X6 is an example
of a new concept that combines the properties of a SUV and a Coupe into
what BMW calls a Sports Activity Coupe. The thing is that before you
can purchase a new X6, BMW has invested thousands of hours and millions
of dollars in both its vehicle and manufacturing design. When BMW
receives your order, one of their assembly lines will kick in and
produce your customized version of the X6.
</p><p>So what is the lesson learned from this carmaker scenario? The
important lesson is that the making of a new car involves two
processes: The first process is the creative design process, including
establishing the required assembly lines. The second process is the
manufacturing of cars in line with customer specification. In many ways
these are the processes we find in the software industry as well. The
challenge is what we put into the terms.
</p><p>In the article &#x201c;What is software design?&#x201d; Jack Reeves suggested
that the only artifact of software engineering that satisfied the
criteria for a design document, as such document is understood and used
in classical engineering, is the source code. The manufacturing of the
software is automated and taken care of by the compiler, build and test
scripts.
</p><p>By accepting that carving out source code is an act of design,
not an act of construction we are in a position to adopt useful
management practices that are proven to work. Those are the practices
used to manage creative and unpredictable work such as developing a new
car, a new medical drug or a new computer game. We talk about the
practices of agile product management and lean production such as
SCRUM. These practices focus on maximizing return-on-investment in
terms of customer value.
</p><p>For the software industry to capitalize on these practices we
must remember: Programming is an act of design, not an act of
construction.
</p>

<footer>
<p class="author">By Einar Landre</p>
<p class="license">This work is licensed under a <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">Creative Commons Attribution 3</a></p>

</footer>
</article>
</body>
</html>

