<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<link rel="stylesheet" href="../css/style_en.css"/>
<title>You can't future-proof solutions - Software Architect 97Things</title>
<meta property="og:title" content="You can't future-proof solutions">
<meta property="og:type" content="article">
<meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/soft97_en.png">
<meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/soft_en/You_cant_future-proof_solutions.htm">
<meta property="og:site_name" content="97 Things Every Software Architect Should Know.">
<meta property="og:locale" content="en_US">

</head>
<body>
<article>
<header>
<h1>You can't future-proof solutions</h1>
</header>

<h2>Today's solution is tomorrows problem</h2>

<p>No one can predict the future. If you accept this as a universal
truth, than the question becomes how far ahead is the future? One
decade? Two years? Twenty minutes? If you can't predict the future than
you can't predict anything beyond right now. This very moment and the
ones that preceded it are all you are know until the next moment
occurs. This is the reason we have car accidents &ndash; if you knew you were
going to have an accident on Thursday you would probably stay home.
</p><p>Yet we see software architects try to design systems that will
be, for lack of a better term, "future proof" all the time. It's simply
not possible to future proof an architecture. No matter what
architectural decision you make now, that choice will become obsolete
eventually. The cool programming language you used will eventually
become the COBOL of tomorrow. Today's distributed framework will become
tomorrows DCOM. In short, today's solution will always be tomorrow's
problem.
</p><p>If you accept this fact, that the choices you make today will
most certainly be wrong in the future, than it relieves you of the
burden of trying to future proof your architectures. If any choice you
make today will be a bad choice in the future than don't worry about
what the future will hold, choose the best solution that meets your
needs today.
</p><p>One of the problems architects have today is analysis paralysis
and a big contribution to that problem is trying to guess the best
technology for the future. Choosing a good technology for right now is
hard enough, choosing one that will be relevant in the future is
futile. Look at what your business needs now. Look at what the
technology market offers now. Choose the best solution that meets your
needs now because anything else will not only be wrong choice tomorrow,
but the wrong choice today.
</p>

<footer>
<p class="author">By Richard Monson-Haefel</p>
<p class="license">This work is licensed under a <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">Creative Commons Attribution 3</a></p>

</footer>
</article>
</body>
</html>

