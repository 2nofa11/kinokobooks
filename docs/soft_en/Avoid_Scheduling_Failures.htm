<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<link rel="stylesheet" href="../css/style_en.css"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
<title>Avoid Scheduling Failures - Software Architect 97Things</title>
<meta property="og:title" content="Avoid Scheduling Failures">
<meta property="og:type" content="article">
<meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/soft97_en.png">
<meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/soft_en/Avoid_Scheduling_Failures.htm">
<meta property="og:site_name" content="97 Things Every Software Architect Should Know.">
<meta property="og:locale" content="en_US">
<script type="text/javascript" src="../js/darkmode.js"></script>
</head>
<body>
<article>
<header>
<h1>Avoid Scheduling Failures</h1>
</header>

<p>Failed projects can happen for a multitude of reasons. One of the most common sources of failure is altering the project schedule in midstream without proper planning. This kind of failure is avoidable, but it can require major effort on the part of multiple people. Adjusting the time line or increasing resources on a project are not normally of concern. Problems start when you are asked to do more in the same time line or when the schedule is shortened without reducing the workload.
</p><p>The idea that schedules can be shortened in order to reduce cost or speed up delivery is a very common misconception. You'll commonly see attempts to require overtime or sacrifice &#x201c;less important scheduled tasks&#x201d; (like unit-testing) as a way to reduce delivery dates or increase functionality while keeping the delivery dates as is. Avoid this scenario at all costs. Remind those requesting the changes of the following facts:
</p>
<ol><li> A rushed design schedule leads to poor design, bad documentation and probable Quality Assurance or User Acceptance problems.
</li><li> A rushed coding or delivery schedule has a direct relationship to the number of bugs delivered to the users.
</li><li> A rushed test schedule leads to poorly tested code and has a direct relationship to the number of testing issues encountered.
</li><li> All of the above lead to Production issues which are much more expensive to fix.
</li></ol>
<p>The end result is an increase in cost as opposed to a reduction in cost. This is normally why the failures happen.
</p><p>As an Architect you will one day find yourself in the position of having to act quickly to increase the likelihood of success. Speak up early. First try to maintain quality by negotiating the originally planned timeline. If a shortened schedule is necessary then try to move non-critical functionality to future release(s). Obviously this will take good preparation, negotiating skills and a knack for influencing people. Prepare by sharpening your skills in those areas today. You will be glad you did.
</p>

<footer>
<p class="author">By Norman Carnovale</p>
<p class="license">This work is licensed under a <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">Creative Commons Attribution 3</a></p>

</footer>
</article>
</body>
</html>

