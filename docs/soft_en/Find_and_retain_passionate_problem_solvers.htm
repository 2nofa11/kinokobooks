<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<link rel="stylesheet" href="../css/style_en.css"/>
<title>Find and retain passionate problem solvers - Software Architect 97Things</title>
<meta property="og:title" content="Find and retain passionate problem solvers">
<meta property="og:type" content="article">
<meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/soft97_en.png">
<meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/soft_en/Find_and_retain_passionate_problem_solvers.htm">
<meta property="og:site_name" content="97 Things Every Software Architect Should Know.">
<meta property="og:locale" content="en_US">

</head>
<body>
<article>
<header>
<h1>Find and retain passionate problem solvers</h1>
</header>

<p>Putting together a team of outstanding developers is one of the most important things you can do to ensure the success of a software project.  While the concept of keeping that team together does not seem to get as much lip service, it is equally important.  Therefore, you need carefully select your development team and diligently protect it once assembled.
</p><p>Most people probably agree that finding top-notch developers requires thorough technical interviewing.  But what does thorough mean exactly?  It doesn't mean requiring candidates to answer difficult questions about obscure technical details.  Screening for specific technical knowledge is definitely part of the process but turning an interview into a certification test will not guarantee success.  You are searching for developers with problem solving skills and passion.  The tools you use are sure to change; you need people who are good at attacking problems regardless of the technologies involved.  Proving someone has the ability to recite every method in an API tells you very little about their aptitude or passion for solving problems. 
</p><p>However, asking someone to explain their approach to diagnosing a performance problem gives you great insight into their methods for problem solving.  If you want to learn about developer's ability to apply lessons learned, ask what they would change given the chance to start their most recent project anew. Good developers are passionate about their work.  Asking them about past experience will bring out that passion and tell you what correct answers to technical trivia questions cannot.
</p><p>If you have been diligent in staffing a strong team, you want to do whatever is within your power to keep the team together.  Retention factors such as compensation may be out of your hands but make sure you're taking care of the little things that help to foster a healthy work environment.  Good developers are often strongly motivated by recognition.  Use this fact to your advantage and acknowledge stellar performances.  Finding great developers is difficult.  Letting people know they are valued is not.  Don't miss simple chances to build morale and boost productivity.
</p><p>Be careful with negative re-enforcement.  Too much of it may stifle a developer's creativity and reduce productivity.  Worse yet, it's likely to create dissension among the team.  Good developers are smart; they know they're not wrong all of the time.  If you're picking apart the minutia of their work, you'll lose their respect.  Keep criticism constructive and don't require that every solution look like it came from you.
</p><p>The importance of staffing your development team correctly can't be overstated.  These are the people who do the heavy lifting.  When it comes to estimates, they're all treated as equal producers. Make sure it's tough to crack the starting lineup and once you've got a winning team go the extra mile to keep it together.
</p>

<footer>
<p class="author">by Chad LaVigne</p>
<p class="license">This work is licensed under a <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">Creative Commons Attribution 3</a></p>

</footer>
</article>
</body>
</html>

