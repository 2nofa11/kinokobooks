<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<link rel="stylesheet" href="../css/style_en.css"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
<title>Value stewardship over showmanship - Software Architect 97Things</title>
<meta property="og:title" content="Value stewardship over showmanship">
<meta property="og:type" content="article">
<meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/soft97_en.png">
<meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/soft_en/Value_stewardship_over_showmanship.htm">
<meta property="og:site_name" content="97 Things Every Software Architect Should Know.">
<meta property="og:locale" content="en_US">

</head>
<body>
<article>
<header>
<h1>Value stewardship over showmanship</h1>
</header>

<p>When an architect enters a project, there is an understandable desire to prove one's worth. Being assigned the role of software architect typically indicates implicit trust on the part of the company in architect's technical leadership, and it only follows that the architect would desire to make good on that expectation as soon as possible. Unfortunately, there are those who labor under the misapprehension that proving one's worth consists of showmanship; bedazzling if not baffling the team with one's technical brilliance.  
</p><p>Showmanship, the act of appealing to your audience, is important in marketing, but it's counter productive to leading a software development project.  Architects must win the respect of their team by providing solid leadership and by truly understanding the technical and business domain in which they are expected to operate.  
</p><p>Stewardship, taking responsibility and care of another's property, is the appropriate role of an architect.  An architect must act in the best interests of their customer and not pander to the needs of their own ego.
</p><p>Software architecture is about serving the needs of one's customers, typically through direction from those with domain expertise that surpasses one's own. Pursuing successful software development will lead one to create solutions of compromise, balancing the cost and complexity of implementation against the time and effort available to a project. That time and effort are the resources of the company, which the software architect must steward without self-serving undercurrents. Unduly complex systems that sport the latest hot framework or technology buzzword seldom do so without some sacrifice at the company's expense. Much like an investment broker, the architect is being allowed to play with their client's money, based on the premise that their activity will yield an acceptable return on investment.
</p><p>Value stewardship over showmanship; never forget that you are playing with other peoples' money.
</p>

<footer>
<p class="author">By Barry Hawkins</p>
<p class="license">This work is licensed under a <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">Creative Commons Attribution 3</a></p>

</footer>
</article>
</body>
</html>

