<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<link rel="stylesheet" href="../css/style_en.css"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
<title>If there is only one solution, get a second opinion - Software Architect 97Things</title>
<meta property="og:title" content="If there is only one solution, get a second opinion">
<meta property="og:type" content="article">
<meta property="og:image" content="https://yoshi389111.github.io/kinokobooks/images/soft97_en.png">
<meta property="og:url" content="https://yoshi389111.github.io/kinokobooks/soft_en/If_there_is_only_one_solution,_get_a_second_opinion.htm">
<meta property="og:site_name" content="97 Things Every Software Architect Should Know.">
<meta property="og:locale" content="en_US">

</head>
<body>
<article>
<header>
<h1>If there is only one solution, get a second opinion</h1>
</header>

<p>You've
probably heard this said before. If you're an experienced architect,
you know it's true: if you can only think of one solution to a problem,
you're in trouble.
</p><p>
Software architecture is about finding the
best possible solution for a problem given any number of constraints.
It is rarely possible to satisfy all requirements and constraints with
the first solution that comes to mind. Generally, trade offs must be
made by choosing the solution that best satisfies the requirements
according to the most critical priorities.
</p><p>
If you only have one
solution to the problem at hand, it means that you will have no room to
negotiate these trade offs. It's very possible this one solution will
be insatisfactory to the stakeholders of your system. It also means
that if priorities are shifted due to a changing business environment,
your system may have no room to adapt for new requirements.
</p><p>
Rarely,
if ever, is this situation caused by a real lack of options. It is much
more likely due to the inexperience of the architect in this particular
problem domain. If you know this is the case, do yourself a favor and
ask someone more experienced to give you a hand.
</p><p>
A more insidious
manifestation of this problem is when an architecture is designed from
habit. An architect can be experienced with a single style of
architecture (e.g. a 3-tier, layered client-server system), but not
know enough to recognize when that style doesn't fit. If you find
yourself in the situation where you automatically KNOW the solution,
without having done any comparison to other approaches, stop, take a
step back, and ask yourself if you can think of another way to do it.
If you can't, you may be in need of some help.
</p><p>A friend of
mine was once the technical person in charge of a small, but growing
internet start-up. As their user base started growing, so did the load
requirements on their system. Performance was going down the tubes, and
they were starting to lose some of their hard-won user base. 
</p><p>
So, the boss asked him, "What can we do to improve the performance?" 
</p><p>
My friend had the answer: "Buy a bigger machine!" 
</p><p>
"What else can we do?"
</p><p>
"Umm... as far as I know, that's it."
</p><p>
My friend was fired on the spot. Of course, the boss was right.
</p>

<footer>
<p class="author">by Timothy High</p>
<p class="license">This work is licensed under a <a href="https://creativecommons.org/licenses/by/3.0/us/" class="external text" title="https://creativecommons.org/licenses/by/3.0/us/" rel="nofollow">Creative Commons Attribution 3</a></p>

</footer>
</article>
</body>
</html>

